{"version":3,"names":["React","useCallback","GestureDetector","Animated","cancelAnimation","measure","runOnJS","useAnimatedReaction","useAnimatedRef","useDerivedValue","useSharedValue","withDecay","Easing","usePanGestureProxy","CTX","dealWithAnimation","IScrollViewGesture","props","onConfigurePanGesture","vertical","pagingEnabled","snapEnabled","loop","scrollAnimationDuration","withAnimation","enabled","dataLength","overscrollEnabled","maxScrollDistancePerSwipe","minScrollDistancePerSwipe","fixedDirection","useContext","size","translation","testID","style","onScrollStart","onScrollEnd","onTouchBegin","onTouchEnd","accessibilityActions","accessibilityLabel","accessibilityRole","accessible","onAccessibilityAction","maxPage","isHorizontal","max","panOffset","undefined","touching","validStart","scrollEndTranslation","scrollEndVelocity","containerRef","maxScrollDistancePerSwipeIsSet","minScrollDistancePerSwipeIsSet","getLimit","width","containerWidth","withSpring","toValue","onFinished","defaultWithAnimation","type","config","duration","easing","easeOutQuart","isFinished","endWithSpring","scrollEndTranslationValue","scrollEndVelocityValue","origin","value","velocity","finalTranslation","deceleration","Math","abs","nextPage","round","offset","computed","ceil","floor","page","velocityDirection","sign","withProcessTranslation","finalPage","min","limit","onFinish","activeDecay","resetBoundary","onGestureStart","_","onGestureUpdate","e","translationX","translationY","panTranslation","boundary","fixed","dynamic","translationValue","onGestureEnd","_success","velocityX","velocityY","totalTranslation","gesture","options","createElement","View","ref","onTouchStart","children","ScrollViewGesture"],"sources":["ScrollViewGesture.tsx"],"sourcesContent":["import type { PropsWithChildren } from \"react\";\nimport React, { useCallback } from \"react\";\nimport type { AccessibilityProps, StyleProp, ViewStyle } from \"react-native\";\nimport type { GestureStateChangeEvent, PanGestureHandlerEventPayload } from \"react-native-gesture-handler\";\nimport { GestureDetector } from \"react-native-gesture-handler\";\nimport Animated, {\n  cancelAnimation,\n  measure,\n  runOnJS,\n  useAnimatedReaction,\n  useAnimatedRef,\n  useDerivedValue,\n  useSharedValue,\n  withDecay,\n} from \"react-native-reanimated\";\n\nimport { Easing } from \"../constants\";\nimport { usePanGestureProxy } from \"../hooks/usePanGestureProxy\";\nimport { CTX } from \"../store\";\nimport type { WithTimingAnimation } from \"../types\";\nimport { dealWithAnimation } from \"../utils/deal-with-animation\";\n\ninterface Props extends AccessibilityProps {\n  size: number\n  infinite?: boolean\n  testID?: string\n  style?: StyleProp<ViewStyle>\n  onScrollStart?: () => void\n  onScrollEnd?: () => void\n  onTouchBegin?: () => void\n  onTouchEnd?: () => void\n  translation: Animated.SharedValue<number>\n}\n\nconst IScrollViewGesture: React.FC<PropsWithChildren<Props>> = (props) => {\n  const {\n    props: {\n      onConfigurePanGesture,\n      vertical,\n      pagingEnabled,\n      snapEnabled,\n      loop,\n      scrollAnimationDuration,\n      withAnimation,\n      enabled,\n      dataLength,\n      overscrollEnabled,\n      maxScrollDistancePerSwipe,\n      minScrollDistancePerSwipe,\n      fixedDirection,\n    },\n  } = React.useContext(CTX);\n\n  const {\n    size,\n    translation,\n    testID,\n    style = {},\n    onScrollStart,\n    onScrollEnd,\n    onTouchBegin,\n    onTouchEnd,\n    accessibilityActions,\n    accessibilityLabel,\n    accessibilityRole,\n    accessible,\n    onAccessibilityAction,\n  } = props;\n\n  const maxPage = dataLength;\n  const isHorizontal = useDerivedValue(() => !vertical, [vertical]);\n  const max = useSharedValue(0);\n  const panOffset = useSharedValue<number | undefined>(undefined); // set to undefined when not actively in a pan gesture\n  const touching = useSharedValue(false);\n  const validStart = useSharedValue(false);\n  const scrollEndTranslation = useSharedValue(0);\n  const scrollEndVelocity = useSharedValue(0);\n  const containerRef = useAnimatedRef<Animated.View>();\n  const maxScrollDistancePerSwipeIsSet = typeof maxScrollDistancePerSwipe === \"number\";\n  const minScrollDistancePerSwipeIsSet = typeof minScrollDistancePerSwipe === \"number\";\n\n  // Get the limit of the scroll.\n  const getLimit = React.useCallback(() => {\n    \"worklet\";\n\n    if (!loop && !overscrollEnabled) {\n      const { width: containerWidth = 0 } = measure(containerRef);\n\n      // If the item's total width is less than the container's width, then there is no need to scroll.\n      if (dataLength * size < containerWidth)\n        return 0;\n\n      // Disable the \"overscroll\" effect\n      return dataLength * size - containerWidth;\n    }\n\n    return dataLength * size;\n  }, [loop, size, dataLength, overscrollEnabled]);\n\n  const withSpring = React.useCallback(\n    (toValue: number, onFinished?: () => void) => {\n      \"worklet\";\n      const defaultWithAnimation: WithTimingAnimation = {\n        type: \"timing\",\n        config: {\n          duration: scrollAnimationDuration + 100,\n          easing: Easing.easeOutQuart,\n        },\n      };\n\n      return dealWithAnimation(withAnimation ?? defaultWithAnimation)(\n        toValue,\n        (isFinished: boolean) => {\n          \"worklet\";\n          if (isFinished)\n            onFinished && runOnJS(onFinished)();\n        },\n      );\n    },\n    [scrollAnimationDuration, withAnimation],\n  );\n\n  const endWithSpring = React.useCallback(\n    (scrollEndTranslationValue: number,\n      scrollEndVelocityValue: number,\n      onFinished?: () => void,\n    ) => {\n      \"worklet\";\n      const origin = translation.value;\n      const velocity = scrollEndVelocityValue;\n      // Default to scroll in the direction of the slide (with deceleration)\n      let finalTranslation: number = withDecay({ velocity, deceleration: 0.999 });\n\n      // If the distance of the swipe exceeds the max scroll distance, keep the view at the current position\n      if (maxScrollDistancePerSwipeIsSet && Math.abs(scrollEndTranslationValue) > maxScrollDistancePerSwipe) {\n        finalTranslation = origin;\n      }\n      else {\n        /**\n         * The page size is the same as the item size.\n         * If direction is vertical, the page size is the height of the item.\n         * If direction is horizontal, the page size is the width of the item.\n        *\n        * `page size` equals to `size` variable.\n        * */\n\n        // calculate target \"nextPage\" based on the final pan position and the velocity of\n        // the pan gesture at termination; this allows for a quick \"flick\" to indicate a far\n        // off page change.\n        const nextPage = -Math.round((origin + velocity * 2) / size);\n\n        if (pagingEnabled) {\n          // we'll never go further than a single page away from the current page when paging\n          // is enabled.\n\n          // distance with direction\n          const offset = -(scrollEndTranslationValue >= 0 ? 1 : -1); // 1 or -1\n          const computed = offset < 0 ? Math.ceil : Math.floor;\n          const page = computed(-origin / size);\n\n          const velocityDirection = -Math.sign(velocity);\n          if (page === nextPage || velocityDirection !== offset) {\n            // not going anywhere! Velocity was insufficient to overcome the distance to get to a\n            // further page. Let's reset gently to the current page.\n            finalTranslation = withSpring(withProcessTranslation(-page * size), onFinished);\n          }\n          else if (loop) {\n            const finalPage = page + offset;\n            finalTranslation = withSpring(withProcessTranslation(-finalPage * size), onFinished);\n          }\n          else {\n            const finalPage = Math.min(maxPage - 1, Math.max(0, page + offset));\n            finalTranslation = withSpring(withProcessTranslation(-finalPage * size), onFinished);\n          }\n        }\n\n        if (!pagingEnabled && snapEnabled) {\n          // scroll to the nearest item\n          finalTranslation = withSpring(withProcessTranslation(-nextPage * size), onFinished);\n        }\n      }\n\n      translation.value = finalTranslation;\n\n      function withProcessTranslation(translation: number) {\n        if (!loop && !overscrollEnabled) {\n          const limit = getLimit();\n          const sign = Math.sign(translation);\n          return sign * Math.max(0, Math.min(limit, Math.abs(translation)));\n        }\n\n        return translation;\n      }\n    },\n    [\n      withSpring,\n      size,\n      maxPage,\n      loop,\n      snapEnabled,\n      translation,\n      pagingEnabled,\n      maxScrollDistancePerSwipe,\n      maxScrollDistancePerSwipeIsSet,\n    ],\n  );\n\n  const onFinish = React.useCallback(\n    (isFinished: boolean) => {\n      \"worklet\";\n      if (isFinished) {\n        touching.value = false;\n        onScrollEnd && runOnJS(onScrollEnd)();\n      }\n    },\n    [onScrollEnd, touching],\n  );\n\n  const activeDecay = React.useCallback(() => {\n    \"worklet\";\n    touching.value = true;\n    translation.value = withDecay(\n      { velocity: scrollEndVelocity.value },\n      isFinished => onFinish(isFinished as boolean),\n    );\n  }, [onFinish, scrollEndVelocity.value, touching, translation]);\n\n  const resetBoundary = React.useCallback(() => {\n    \"worklet\";\n    if (touching.value)\n      return;\n\n    if (translation.value > 0) {\n      if (scrollEndTranslation.value < 0) {\n        activeDecay();\n        return;\n      }\n      if (!loop) {\n        translation.value = withSpring(0);\n        return;\n      }\n    }\n\n    if (translation.value < -((maxPage - 1) * size)) {\n      if (scrollEndTranslation.value > 0) {\n        activeDecay();\n        return;\n      }\n      if (!loop)\n        translation.value = withSpring(-((maxPage - 1) * size));\n    }\n  }, [\n    touching.value,\n    translation,\n    maxPage,\n    size,\n    scrollEndTranslation.value,\n    loop,\n    activeDecay,\n    withSpring,\n  ]);\n\n  useAnimatedReaction(\n    () => translation.value,\n    () => {\n      if (!pagingEnabled)\n        resetBoundary();\n    },\n    [pagingEnabled, resetBoundary],\n  );\n\n  function withProcessTranslation(translation: number) {\n    \"worklet\";\n\n    if (!loop && !overscrollEnabled) {\n      const limit = getLimit();\n      const sign = Math.sign(translation);\n      return sign * Math.max(0, Math.min(limit, Math.abs(translation)));\n    }\n\n    return translation;\n  }\n\n  const onGestureStart = useCallback((_: PanGestureHandlerEventPayload) => {\n    \"worklet\";\n\n    touching.value = true;\n    validStart.value = true;\n    onScrollStart && runOnJS(onScrollStart)();\n\n    max.value = (maxPage - 1) * size;\n    if (!loop && !overscrollEnabled)\n      max.value = getLimit();\n\n    panOffset.value = translation.value;\n  }, [\n    max,\n    size,\n    maxPage,\n    loop,\n    touching,\n    panOffset,\n    validStart,\n    translation,\n    overscrollEnabled,\n    getLimit,\n    onScrollStart,\n  ]);\n\n  const onGestureUpdate = useCallback((e: PanGestureHandlerEventPayload) => {\n    \"worklet\";\n\n    if (panOffset.value === undefined) {\n      // This may happen if `onGestureStart` is called as a part of the\n      // JS thread (instead of the UI thread / worklet). If so, when\n      // `onGestureStart` sets panOffset.value, the set will be asynchronous,\n      // and so it may not actually occur before `onGestureUpdate` is called.\n      //\n      // Keeping this value as `undefined` when it is not active protects us\n      // from the situation where we may use the previous value for panOffset\n      // instead; this would cause a visual flicker in the carousel.\n\n      // console.warn(\"onGestureUpdate: panOffset is undefined\");\n      return;\n    }\n\n    if (validStart.value) {\n      validStart.value = false;\n      cancelAnimation(translation);\n    }\n    touching.value = true;\n    const { translationX, translationY } = e;\n\n    let panTranslation = isHorizontal.value\n      ? translationX\n      : translationY;\n\n    if (fixedDirection === \"negative\")\n      panTranslation = -Math.abs(panTranslation);\n\n    else if (fixedDirection === \"positive\")\n      panTranslation = +Math.abs(panTranslation);\n\n    if (!loop) {\n      if ((translation.value > 0 || translation.value < -max.value)) {\n        const boundary = translation.value > 0 ? 0 : -max.value;\n        const fixed = boundary - panOffset.value;\n        const dynamic = panTranslation - fixed;\n        translation.value = boundary + dynamic * 0.5;\n        return;\n      }\n    }\n\n    const translationValue = panOffset.value + panTranslation;\n    translation.value = translationValue;\n  }, [\n    isHorizontal,\n    max,\n    panOffset,\n    loop,\n    overscrollEnabled,\n    fixedDirection,\n    translation,\n    validStart,\n    touching,\n  ]);\n\n  const onGestureEnd = useCallback((e: GestureStateChangeEvent<PanGestureHandlerEventPayload>, _success: boolean) => {\n    \"worklet\";\n\n    if (panOffset.value === undefined) {\n      // console.warn(\"onGestureEnd: panOffset is undefined\");\n      return;\n    }\n\n    const { velocityX, velocityY, translationX, translationY } = e;\n    const scrollEndVelocityValue = isHorizontal.value\n      ? velocityX\n      : velocityY;\n    scrollEndVelocity.value = scrollEndVelocityValue; // may update async: see https://docs.swmansion.com/react-native-reanimated/docs/core/useSharedValue#remarks\n\n    let panTranslation = isHorizontal.value\n      ? translationX\n      : translationY;\n\n    if (fixedDirection === \"negative\")\n      panTranslation = -Math.abs(panTranslation);\n\n    else if (fixedDirection === \"positive\")\n      panTranslation = +Math.abs(panTranslation);\n\n    scrollEndTranslation.value = panTranslation; // may update async: see https://docs.swmansion.com/react-native-reanimated/docs/core/useSharedValue#remarks\n\n    const totalTranslation = scrollEndVelocityValue + panTranslation;\n\n    /**\n     * If the maximum scroll distance is set and the translation `exceeds the maximum scroll distance`,\n     * the carousel will keep the view at the current position.\n    */\n    if (\n      maxScrollDistancePerSwipeIsSet && Math.abs(totalTranslation) > maxScrollDistancePerSwipe\n    ) {\n      const nextPage = Math.round((panOffset.value + maxScrollDistancePerSwipe * Math.sign(totalTranslation)) / size) * size;\n      translation.value = withSpring(withProcessTranslation(nextPage), onScrollEnd);\n    }\n    /**\n     * If the minimum scroll distance is set and the translation `didn't exceeds the minimum scroll distance`,\n     * the carousel will keep the view at the current position.\n    */\n    else if (\n      minScrollDistancePerSwipeIsSet && Math.abs(totalTranslation) < minScrollDistancePerSwipe\n    ) {\n      const nextPage = Math.round((panOffset.value + minScrollDistancePerSwipe * Math.sign(totalTranslation)) / size) * size;\n      translation.value = withSpring(withProcessTranslation(nextPage), onScrollEnd);\n    }\n    else {\n      endWithSpring(panTranslation, scrollEndVelocityValue, onScrollEnd);\n    }\n\n    if (!loop)\n      touching.value = false;\n\n    panOffset.value = undefined;\n  }, [\n    size,\n    loop,\n    touching,\n    panOffset,\n    translation,\n    isHorizontal,\n    scrollEndVelocity,\n    scrollEndTranslation,\n    fixedDirection,\n    maxScrollDistancePerSwipeIsSet,\n    maxScrollDistancePerSwipe,\n    maxScrollDistancePerSwipeIsSet,\n    minScrollDistancePerSwipe,\n    endWithSpring,\n    withSpring,\n    onScrollEnd,\n  ]);\n\n  const gesture = usePanGestureProxy({\n    onConfigurePanGesture,\n    onGestureStart,\n    onGestureUpdate,\n    onGestureEnd,\n    options: { enabled },\n  });\n\n  return (\n    <GestureDetector gesture={gesture}>\n      <Animated.View\n        ref={containerRef}\n        testID={testID}\n        style={style}\n        onTouchStart={onTouchBegin}\n        onTouchEnd={onTouchEnd}\n        accessibilityActions={accessibilityActions}\n        accessibilityLabel={accessibilityLabel}\n        accessibilityRole={accessibilityRole}\n        accessible={accessible}\n        onAccessibilityAction={onAccessibilityAction}\n      >\n        {props.children}\n      </Animated.View>\n    </GestureDetector>\n  );\n};\n\nexport const ScrollViewGesture = IScrollViewGesture;\n"],"mappings":"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","ignoreList":[]}