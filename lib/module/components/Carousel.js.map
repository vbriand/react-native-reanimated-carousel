{"version":3,"sources":["Carousel.tsx"],"names":["React","StyleSheet","GestureHandlerRootView","runOnJS","useDerivedValue","ItemRenderer","ScrollViewGesture","useAutoPlay","useCarouselController","useCommonVariables","useInitProps","useLayoutConfig","useOnProgressChange","usePropsErrorBoundary","CTX","computedRealIndexWithAutoFillData","Carousel","forwardRef","_props","ref","props","testID","loop","autoFillData","data","dataLength","rawDataLength","mode","style","width","height","vertical","autoPlay","windowSize","autoPlayReverse","autoPlayInterval","scrollAnimationDuration","withAnimation","fixedDirection","renderItem","onScrollEnd","onSnapToItem","onScrollStart","onProgressChange","customAnimation","defaultIndex","commonVariables","size","handlerOffset","offsetX","totalSize","x","value","isNaN","carouselController","duration","_onScrollEnd","next","prev","scrollTo","getSharedIndex","getCurrentIndex","start","startAutoPlay","pause","pauseAutoPlay","useCallback","_sharedIndex","Math","round","realIndex","index","scrollViewGestureOnScrollStart","scrollViewGestureOnScrollEnd","scrollViewGestureOnTouchBegin","scrollViewGestureOnTouchEnd","useImperativeHandle","layoutConfig","common","styles","container","itemsVertical","itemsHorizontal","create","overflow","flexDirection"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { StyleSheet } from \"react-native\";\nimport { GestureHandlerRootView } from \"react-native-gesture-handler\";\nimport { runOnJS, useDerivedValue } from \"react-native-reanimated\";\n\nimport { ItemRenderer } from \"./ItemRenderer\";\nimport { ScrollViewGesture } from \"./ScrollViewGesture\";\n\nimport { useAutoPlay } from \"../hooks/useAutoPlay\";\nimport { useCarouselController } from \"../hooks/useCarouselController\";\nimport { useCommonVariables } from \"../hooks/useCommonVariables\";\nimport { useInitProps } from \"../hooks/useInitProps\";\nimport { useLayoutConfig } from \"../hooks/useLayoutConfig\";\nimport { useOnProgressChange } from \"../hooks/useOnProgressChange\";\nimport { usePropsErrorBoundary } from \"../hooks/usePropsErrorBoundary\";\nimport { CTX } from \"../store\";\nimport type { ICarouselInstance, TCarouselProps } from \"../types\";\nimport { computedRealIndexWithAutoFillData } from \"../utils/computed-with-auto-fill-data\";\n\nconst Carousel = React.forwardRef<ICarouselInstance, TCarouselProps<any>>(\n  (_props, ref) => {\n    const props = useInitProps(_props);\n\n    const {\n      testID,\n      loop,\n      autoFillData,\n      // Fill data with autoFillData\n      data,\n      // Length of fill data\n      dataLength,\n      // Length of raw data\n      rawDataLength,\n      mode,\n      style,\n      width,\n      height,\n      vertical,\n      autoPlay,\n      windowSize,\n      autoPlayReverse,\n      autoPlayInterval,\n      scrollAnimationDuration,\n      withAnimation,\n      fixedDirection,\n      renderItem,\n      onScrollEnd,\n      onSnapToItem,\n      onScrollStart,\n      onProgressChange,\n      customAnimation,\n      defaultIndex,\n    } = props;\n\n    const commonVariables = useCommonVariables(props);\n    const { size, handlerOffset } = commonVariables;\n\n    const offsetX = useDerivedValue(() => {\n      const totalSize = size * dataLength;\n      const x = handlerOffset.value % totalSize;\n\n      if (!loop)\n        return handlerOffset.value;\n\n      return isNaN(x) ? 0 : x;\n    }, [loop, size, dataLength]);\n\n    usePropsErrorBoundary({ ...props, dataLength });\n    useOnProgressChange({\n      autoFillData,\n      loop,\n      size,\n      offsetX,\n      rawDataLength,\n      onProgressChange,\n    });\n\n    const carouselController = useCarouselController({\n      loop,\n      size,\n      dataLength,\n      autoFillData,\n      handlerOffset,\n      withAnimation,\n      defaultIndex,\n      fixedDirection,\n      duration: scrollAnimationDuration,\n      onScrollEnd: () => runOnJS(_onScrollEnd)(),\n      onScrollStart: () => !!onScrollStart && runOnJS(onScrollStart)(),\n    });\n\n    const { next, prev, scrollTo, getSharedIndex, getCurrentIndex }\n            = carouselController;\n\n    const { start: startAutoPlay, pause: pauseAutoPlay } = useAutoPlay({\n      autoPlay,\n      autoPlayInterval,\n      autoPlayReverse,\n      carouselController,\n    });\n\n    const _onScrollEnd = React.useCallback(() => {\n      const _sharedIndex = Math.round(getSharedIndex());\n\n      const realIndex = computedRealIndexWithAutoFillData({\n        index: _sharedIndex,\n        dataLength: rawDataLength,\n        loop,\n        autoFillData,\n      });\n\n      if (onSnapToItem)\n        onSnapToItem(realIndex);\n\n      if (onScrollEnd)\n        onScrollEnd(realIndex);\n    }, [\n      loop,\n      autoFillData,\n      rawDataLength,\n      getSharedIndex,\n      onSnapToItem,\n      onScrollEnd,\n    ]);\n\n    const scrollViewGestureOnScrollStart = React.useCallback(() => {\n      pauseAutoPlay();\n      onScrollStart?.();\n    }, [onScrollStart, pauseAutoPlay]);\n\n    const scrollViewGestureOnScrollEnd = React.useCallback(() => {\n      startAutoPlay();\n      _onScrollEnd();\n    }, [_onScrollEnd, startAutoPlay]);\n\n    const scrollViewGestureOnTouchBegin = React.useCallback(pauseAutoPlay, [\n      pauseAutoPlay,\n    ]);\n\n    const scrollViewGestureOnTouchEnd = React.useCallback(startAutoPlay, [\n      startAutoPlay,\n    ]);\n\n    React.useImperativeHandle(\n      ref,\n      () => ({\n        next,\n        prev,\n        getCurrentIndex,\n        scrollTo,\n      }),\n      [getCurrentIndex, next, prev, scrollTo],\n    );\n\n    const layoutConfig = useLayoutConfig({ ...props, size });\n\n    return (\n      <GestureHandlerRootView>\n        <CTX.Provider value={{ props, common: commonVariables }}>\n          <ScrollViewGesture\n            key={mode}\n            size={size}\n            translation={handlerOffset}\n            style={[\n              styles.container,\n              {\n                width: width || \"100%\",\n                height: height || \"100%\",\n              },\n              style,\n              vertical\n                ? styles.itemsVertical\n                : styles.itemsHorizontal,\n            ]}\n            testID={testID}\n            onScrollStart={scrollViewGestureOnScrollStart}\n            onScrollEnd={scrollViewGestureOnScrollEnd}\n            onTouchBegin={scrollViewGestureOnTouchBegin}\n            onTouchEnd={scrollViewGestureOnTouchEnd}\n          >\n            <ItemRenderer\n              data={data}\n              dataLength={dataLength}\n              rawDataLength={rawDataLength}\n              loop={loop}\n              size={size}\n              windowSize={windowSize}\n              autoFillData={autoFillData}\n              offsetX={offsetX}\n              handlerOffset={handlerOffset}\n              layoutConfig={layoutConfig}\n              renderItem={renderItem}\n              customAnimation={customAnimation}\n            />\n          </ScrollViewGesture>\n        </CTX.Provider>\n      </GestureHandlerRootView>\n    );\n  },\n);\n\nexport default Carousel as <T extends any>(\n  props: React.PropsWithChildren<TCarouselProps<T>>\n) => React.ReactElement;\n\nconst styles = StyleSheet.create({\n  container: {\n    overflow: \"hidden\",\n  },\n  itemsHorizontal: {\n    flexDirection: \"row\",\n  },\n  itemsVertical: {\n    flexDirection: \"column\",\n  },\n});\n"]}