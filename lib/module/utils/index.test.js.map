{"version":3,"names":["computeOffsetIfDataChanged","describe","size","positive","negative","params","currentIndex","direction","_direction","previousLength","currentLength","handlerOffset","it","expect","toBe"],"sources":["index.test.ts"],"sourcesContent":["import { computeOffsetIfDataChanged } from \"./compute-offset-if-data-changed\";\n\ndescribe(\"should work as expected\", () => {\n  const size = 375;\n  const positive = -1;\n  const negative = 1;\n\n  const params = (params: {\n    direction: \"positive\" | \"negative\"\n    currentIndex: number\n    previousLength: number\n    currentLength: number\n  }) => {\n    const { currentIndex, direction: _direction, previousLength, currentLength } = params;\n    const direction = _direction === \"negative\" ? negative : positive;\n    return {\n      direction,\n      handlerOffset: size * currentIndex * direction,\n      size,\n      previousLength,\n      currentLength,\n    };\n  };\n\n  it(\"The direction is negative, And changing length of data set from 4 to 3, the new index will to be 2.\", async () => {\n    const currentIndex = 1;\n    const handlerOffset = computeOffsetIfDataChanged(params({\n      currentIndex,\n      direction: \"negative\",\n      previousLength: 4,\n      currentLength: 3,\n    }));\n\n    expect(handlerOffset / size).toBe(2 * positive);\n  });\n\n  it(\"The direction is negative, Changing length of data set from 4 to 3, the index remains original.\", async () => {\n    const handlerOffset = computeOffsetIfDataChanged(params({\n      currentIndex: 2,\n      direction: \"negative\",\n      previousLength: 4,\n      currentLength: 3,\n    }));\n\n    expect(handlerOffset / size).toBe(1 * negative);\n  });\n\n  it(\"The direction is positive, Changing length of data set from 4 to 5, the index remains original.\", async () => {\n    const handlerOffset = computeOffsetIfDataChanged(params({\n      currentIndex: 3,\n      direction: \"positive\",\n      previousLength: 4,\n      currentLength: 5,\n    }));\n\n    expect(handlerOffset / size).toBe(3 * positive);\n  });\n\n  it(\"The direction is negative, Changing length of data set from 4 to 5, the index remains original.\", async () => {\n    const handlerOffset = computeOffsetIfDataChanged(params({\n      currentIndex: 3,\n      direction: \"negative\",\n      previousLength: 4,\n      currentLength: 5,\n    }));\n\n    expect(handlerOffset / size).toBe(4 * negative);\n  });\n\n  it(\"Changing length of data set from 0 to 3, the index remains original.\", async () => {\n    const handlerOffset = computeOffsetIfDataChanged(params({\n      currentIndex: 0,\n      direction: \"positive\",\n      previousLength: 0,\n      currentLength: 3,\n    }));\n\n    expect(handlerOffset / size).toBe(0 * positive);\n  });\n});\n"],"mappings":"AAAA,SAASA,0BAA0B,QAAQ,kCAAkC;AAE7EC,QAAQ,CAAC,yBAAyB,EAAE,MAAM;EACxC,MAAMC,IAAI,GAAG,GAAG;EAChB,MAAMC,QAAQ,GAAG,CAAC,CAAC;EACnB,MAAMC,QAAQ,GAAG,CAAC;EAElB,MAAMC,MAAM,GAAIA,MAKf,IAAK;IACJ,MAAM;MAAEC,YAAY;MAAEC,SAAS,EAAEC,UAAU;MAAEC,cAAc;MAAEC;IAAc,CAAC,GAAGL,MAAM;IACrF,MAAME,SAAS,GAAGC,UAAU,KAAK,UAAU,GAAGJ,QAAQ,GAAGD,QAAQ;IACjE,OAAO;MACLI,SAAS;MACTI,aAAa,EAAET,IAAI,GAAGI,YAAY,GAAGC,SAAS;MAC9CL,IAAI;MACJO,cAAc;MACdC;IACF,CAAC;EACH,CAAC;EAEDE,EAAE,CAAC,qGAAqG,EAAE,YAAY;IACpH,MAAMN,YAAY,GAAG,CAAC;IACtB,MAAMK,aAAa,GAAGX,0BAA0B,CAACK,MAAM,CAAC;MACtDC,YAAY;MACZC,SAAS,EAAE,UAAU;MACrBE,cAAc,EAAE,CAAC;MACjBC,aAAa,EAAE;IACjB,CAAC,CAAC,CAAC;IAEHG,MAAM,CAACF,aAAa,GAAGT,IAAI,CAAC,CAACY,IAAI,CAAC,CAAC,GAAGX,QAAQ,CAAC;EACjD,CAAC,CAAC;EAEFS,EAAE,CAAC,iGAAiG,EAAE,YAAY;IAChH,MAAMD,aAAa,GAAGX,0BAA0B,CAACK,MAAM,CAAC;MACtDC,YAAY,EAAE,CAAC;MACfC,SAAS,EAAE,UAAU;MACrBE,cAAc,EAAE,CAAC;MACjBC,aAAa,EAAE;IACjB,CAAC,CAAC,CAAC;IAEHG,MAAM,CAACF,aAAa,GAAGT,IAAI,CAAC,CAACY,IAAI,CAAC,CAAC,GAAGV,QAAQ,CAAC;EACjD,CAAC,CAAC;EAEFQ,EAAE,CAAC,iGAAiG,EAAE,YAAY;IAChH,MAAMD,aAAa,GAAGX,0BAA0B,CAACK,MAAM,CAAC;MACtDC,YAAY,EAAE,CAAC;MACfC,SAAS,EAAE,UAAU;MACrBE,cAAc,EAAE,CAAC;MACjBC,aAAa,EAAE;IACjB,CAAC,CAAC,CAAC;IAEHG,MAAM,CAACF,aAAa,GAAGT,IAAI,CAAC,CAACY,IAAI,CAAC,CAAC,GAAGX,QAAQ,CAAC;EACjD,CAAC,CAAC;EAEFS,EAAE,CAAC,iGAAiG,EAAE,YAAY;IAChH,MAAMD,aAAa,GAAGX,0BAA0B,CAACK,MAAM,CAAC;MACtDC,YAAY,EAAE,CAAC;MACfC,SAAS,EAAE,UAAU;MACrBE,cAAc,EAAE,CAAC;MACjBC,aAAa,EAAE;IACjB,CAAC,CAAC,CAAC;IAEHG,MAAM,CAACF,aAAa,GAAGT,IAAI,CAAC,CAACY,IAAI,CAAC,CAAC,GAAGV,QAAQ,CAAC;EACjD,CAAC,CAAC;EAEFQ,EAAE,CAAC,sEAAsE,EAAE,YAAY;IACrF,MAAMD,aAAa,GAAGX,0BAA0B,CAACK,MAAM,CAAC;MACtDC,YAAY,EAAE,CAAC;MACfC,SAAS,EAAE,UAAU;MACrBE,cAAc,EAAE,CAAC;MACjBC,aAAa,EAAE;IACjB,CAAC,CAAC,CAAC;IAEHG,MAAM,CAACF,aAAa,GAAGT,IAAI,CAAC,CAACY,IAAI,CAAC,CAAC,GAAGX,QAAQ,CAAC;EACjD,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}