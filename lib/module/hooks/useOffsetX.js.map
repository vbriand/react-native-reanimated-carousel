{"version":3,"names":["Extrapolate","interpolate","useDerivedValue","useOffsetX","opts","visibleRanges","handlerOffset","index","size","loop","dataLength","type","viewCount","_viewCount","ITEM_LENGTH","VALID_LENGTH","TOTAL_WIDTH","HALF_WIDTH","Math","round","positiveCount","startPos","MAX","MIN","x","negativeRange","positiveRange","value","inputRange","Number","MIN_VALUE","outputRange","CLAMP","MAX_SAFE_INTEGER"],"sources":["useOffsetX.ts"],"sourcesContent":["import type Animated from \"react-native-reanimated\";\nimport {\n  Extrapolate,\n  interpolate,\n  useDerivedValue,\n} from \"react-native-reanimated\";\n\nimport type { IVisibleRanges } from \"./useVisibleRanges\";\n\nexport interface IOpts {\n  index: number\n  size: number\n  handlerOffset: Animated.SharedValue<number>\n  dataLength: number\n  type?: \"positive\" | \"negative\"\n  viewCount?: number\n  loop?: boolean\n}\n\nexport const useOffsetX = (opts: IOpts, visibleRanges: IVisibleRanges) => {\n  const {\n    handlerOffset,\n    index,\n    size,\n    loop,\n    dataLength,\n    type = \"positive\",\n    viewCount: _viewCount,\n  } = opts;\n\n  const ITEM_LENGTH = dataLength;\n  const VALID_LENGTH = ITEM_LENGTH - 1;\n  const TOTAL_WIDTH = size * ITEM_LENGTH;\n  const HALF_WIDTH = 0.5 * size;\n\n  const viewCount = _viewCount ?? Math.round((ITEM_LENGTH - 1) / 2);\n  const positiveCount\n    = type === \"positive\" ? viewCount : VALID_LENGTH - viewCount;\n\n  let startPos = size * index;\n  if (index > positiveCount)\n    startPos = (index - ITEM_LENGTH) * size;\n\n  const MAX = positiveCount * size;\n  const MIN = -((VALID_LENGTH - positiveCount) * size);\n\n  const x = useDerivedValue(() => {\n    const { negativeRange, positiveRange } = visibleRanges.value;\n\n    if (\n      (index >= negativeRange[0] && index <= negativeRange[1])\n      || (index >= positiveRange[0] && index <= positiveRange[1])\n    ) {\n      if (loop) {\n        const inputRange = [\n          -TOTAL_WIDTH,\n          MIN - HALF_WIDTH - startPos - Number.MIN_VALUE,\n          MIN - HALF_WIDTH - startPos,\n          0,\n          MAX + HALF_WIDTH - startPos,\n          MAX + HALF_WIDTH - startPos + Number.MIN_VALUE,\n          TOTAL_WIDTH,\n        ];\n\n        const outputRange = [\n          startPos,\n          MAX + HALF_WIDTH - Number.MIN_VALUE,\n          MIN - HALF_WIDTH,\n          startPos,\n          MAX + HALF_WIDTH,\n          MIN - HALF_WIDTH + Number.MIN_VALUE,\n          startPos,\n        ];\n\n        return interpolate(\n          handlerOffset.value,\n          inputRange,\n          outputRange,\n          Extrapolate.CLAMP,\n        );\n      }\n\n      return handlerOffset.value + size * index;\n    }\n\n    return Number.MAX_SAFE_INTEGER;\n  }, [loop, dataLength, viewCount, type, size, visibleRanges]);\n\n  return x;\n};\n"],"mappings":"AACA,SACEA,WAAW,EACXC,WAAW,EACXC,eAAe,QACV,yBAAyB;AAchC,OAAO,MAAMC,UAAU,GAAGA,CAACC,IAAW,EAAEC,aAA6B,KAAK;EACxE,MAAM;IACJC,aAAa;IACbC,KAAK;IACLC,IAAI;IACJC,IAAI;IACJC,UAAU;IACVC,IAAI,GAAG,UAAU;IACjBC,SAAS,EAAEC;EACb,CAAC,GAAGT,IAAI;EAER,MAAMU,WAAW,GAAGJ,UAAU;EAC9B,MAAMK,YAAY,GAAGD,WAAW,GAAG,CAAC;EACpC,MAAME,WAAW,GAAGR,IAAI,GAAGM,WAAW;EACtC,MAAMG,UAAU,GAAG,GAAG,GAAGT,IAAI;EAE7B,MAAMI,SAAS,GAAGC,UAAU,IAAIK,IAAI,CAACC,KAAK,CAAC,CAACL,WAAW,GAAG,CAAC,IAAI,CAAC,CAAC;EACjE,MAAMM,aAAa,GACfT,IAAI,KAAK,UAAU,GAAGC,SAAS,GAAGG,YAAY,GAAGH,SAAS;EAE9D,IAAIS,QAAQ,GAAGb,IAAI,GAAGD,KAAK;EAC3B,IAAIA,KAAK,GAAGa,aAAa,EACvBC,QAAQ,GAAG,CAACd,KAAK,GAAGO,WAAW,IAAIN,IAAI;EAEzC,MAAMc,GAAG,GAAGF,aAAa,GAAGZ,IAAI;EAChC,MAAMe,GAAG,GAAG,EAAE,CAACR,YAAY,GAAGK,aAAa,IAAIZ,IAAI,CAAC;EAEpD,MAAMgB,CAAC,GAAGtB,eAAe,CAAC,MAAM;IAC9B,MAAM;MAAEuB,aAAa;MAAEC;IAAc,CAAC,GAAGrB,aAAa,CAACsB,KAAK;IAE5D,IACGpB,KAAK,IAAIkB,aAAa,CAAC,CAAC,CAAC,IAAIlB,KAAK,IAAIkB,aAAa,CAAC,CAAC,CAAC,IACnDlB,KAAK,IAAImB,aAAa,CAAC,CAAC,CAAC,IAAInB,KAAK,IAAImB,aAAa,CAAC,CAAC,CAAE,EAC3D;MACA,IAAIjB,IAAI,EAAE;QACR,MAAMmB,UAAU,GAAG,CACjB,CAACZ,WAAW,EACZO,GAAG,GAAGN,UAAU,GAAGI,QAAQ,GAAGQ,MAAM,CAACC,SAAS,EAC9CP,GAAG,GAAGN,UAAU,GAAGI,QAAQ,EAC3B,CAAC,EACDC,GAAG,GAAGL,UAAU,GAAGI,QAAQ,EAC3BC,GAAG,GAAGL,UAAU,GAAGI,QAAQ,GAAGQ,MAAM,CAACC,SAAS,EAC9Cd,WAAW,CACZ;QAED,MAAMe,WAAW,GAAG,CAClBV,QAAQ,EACRC,GAAG,GAAGL,UAAU,GAAGY,MAAM,CAACC,SAAS,EACnCP,GAAG,GAAGN,UAAU,EAChBI,QAAQ,EACRC,GAAG,GAAGL,UAAU,EAChBM,GAAG,GAAGN,UAAU,GAAGY,MAAM,CAACC,SAAS,EACnCT,QAAQ,CACT;QAED,OAAOpB,WAAW,CAChBK,aAAa,CAACqB,KAAK,EACnBC,UAAU,EACVG,WAAW,EACX/B,WAAW,CAACgC,KACd,CAAC;MACH;MAEA,OAAO1B,aAAa,CAACqB,KAAK,GAAGnB,IAAI,GAAGD,KAAK;IAC3C;IAEA,OAAOsB,MAAM,CAACI,gBAAgB;EAChC,CAAC,EAAE,CAACxB,IAAI,EAAEC,UAAU,EAAEE,SAAS,EAAED,IAAI,EAAEH,IAAI,EAAEH,aAAa,CAAC,CAAC;EAE5D,OAAOmB,CAAC;AACV,CAAC","ignoreList":[]}