{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNativeGestureHandler","_reactNativeReanimated","_constants","_usePanGestureProxy","_store","_dealWithAnimation","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","IScrollViewGesture","props","onConfigurePanGesture","vertical","pagingEnabled","snapEnabled","loop","scrollAnimationDuration","withAnimation","enabled","dataLength","overscrollEnabled","maxScrollDistancePerSwipe","minScrollDistancePerSwipe","fixedDirection","React","useContext","CTX","size","translation","testID","style","onScrollStart","onScrollEnd","onTouchBegin","onTouchEnd","accessibilityActions","accessibilityLabel","accessibilityRole","accessible","onAccessibilityAction","maxPage","isHorizontal","useDerivedValue","max","useSharedValue","panOffset","undefined","touching","validStart","scrollEndTranslation","scrollEndVelocity","containerRef","useAnimatedRef","maxScrollDistancePerSwipeIsSet","minScrollDistancePerSwipeIsSet","getLimit","useCallback","width","containerWidth","measure","withSpring","toValue","onFinished","defaultWithAnimation","type","config","duration","easing","Easing","easeOutQuart","dealWithAnimation","isFinished","runOnJS","endWithSpring","scrollEndTranslationValue","scrollEndVelocityValue","origin","value","velocity","finalTranslation","withDecay","deceleration","Math","abs","nextPage","round","offset","computed","ceil","floor","page","velocityDirection","sign","withProcessTranslation","finalPage","min","limit","onFinish","activeDecay","resetBoundary","useAnimatedReaction","onGestureStart","_","onGestureUpdate","cancelAnimation","translationX","translationY","panTranslation","boundary","fixed","dynamic","translationValue","onGestureEnd","_success","velocityX","velocityY","totalTranslation","gesture","usePanGestureProxy","options","createElement","GestureDetector","View","ref","onTouchStart","children","ScrollViewGesture","exports"],"sources":["ScrollViewGesture.tsx"],"sourcesContent":["import type { PropsWithChildren } from \"react\";\nimport React, { useCallback } from \"react\";\nimport type { AccessibilityProps, StyleProp, ViewStyle } from \"react-native\";\nimport type { GestureStateChangeEvent, PanGestureHandlerEventPayload } from \"react-native-gesture-handler\";\nimport { GestureDetector } from \"react-native-gesture-handler\";\nimport Animated, {\n  cancelAnimation,\n  measure,\n  runOnJS,\n  useAnimatedReaction,\n  useAnimatedRef,\n  useDerivedValue,\n  useSharedValue,\n  withDecay,\n} from \"react-native-reanimated\";\n\nimport { Easing } from \"../constants\";\nimport { usePanGestureProxy } from \"../hooks/usePanGestureProxy\";\nimport { CTX } from \"../store\";\nimport type { WithTimingAnimation } from \"../types\";\nimport { dealWithAnimation } from \"../utils/deal-with-animation\";\n\ninterface Props extends AccessibilityProps {\n  size: number\n  infinite?: boolean\n  testID?: string\n  style?: StyleProp<ViewStyle>\n  onScrollStart?: () => void\n  onScrollEnd?: () => void\n  onTouchBegin?: () => void\n  onTouchEnd?: () => void\n  translation: Animated.SharedValue<number>\n}\n\nconst IScrollViewGesture: React.FC<PropsWithChildren<Props>> = (props) => {\n  const {\n    props: {\n      onConfigurePanGesture,\n      vertical,\n      pagingEnabled,\n      snapEnabled,\n      loop,\n      scrollAnimationDuration,\n      withAnimation,\n      enabled,\n      dataLength,\n      overscrollEnabled,\n      maxScrollDistancePerSwipe,\n      minScrollDistancePerSwipe,\n      fixedDirection,\n    },\n  } = React.useContext(CTX);\n\n  const {\n    size,\n    translation,\n    testID,\n    style = {},\n    onScrollStart,\n    onScrollEnd,\n    onTouchBegin,\n    onTouchEnd,\n    accessibilityActions,\n    accessibilityLabel,\n    accessibilityRole,\n    accessible,\n    onAccessibilityAction,\n  } = props;\n\n  const maxPage = dataLength;\n  const isHorizontal = useDerivedValue(() => !vertical, [vertical]);\n  const max = useSharedValue(0);\n  const panOffset = useSharedValue<number | undefined>(undefined); // set to undefined when not actively in a pan gesture\n  const touching = useSharedValue(false);\n  const validStart = useSharedValue(false);\n  const scrollEndTranslation = useSharedValue(0);\n  const scrollEndVelocity = useSharedValue(0);\n  const containerRef = useAnimatedRef<Animated.View>();\n  const maxScrollDistancePerSwipeIsSet = typeof maxScrollDistancePerSwipe === \"number\";\n  const minScrollDistancePerSwipeIsSet = typeof minScrollDistancePerSwipe === \"number\";\n\n  // Get the limit of the scroll.\n  const getLimit = React.useCallback(() => {\n    \"worklet\";\n\n    if (!loop && !overscrollEnabled) {\n      const { width: containerWidth = 0 } = measure(containerRef);\n\n      // If the item's total width is less than the container's width, then there is no need to scroll.\n      if (dataLength * size < containerWidth)\n        return 0;\n\n      // Disable the \"overscroll\" effect\n      return dataLength * size - containerWidth;\n    }\n\n    return dataLength * size;\n  }, [loop, size, dataLength, overscrollEnabled]);\n\n  const withSpring = React.useCallback(\n    (toValue: number, onFinished?: () => void) => {\n      \"worklet\";\n      const defaultWithAnimation: WithTimingAnimation = {\n        type: \"timing\",\n        config: {\n          duration: scrollAnimationDuration + 100,\n          easing: Easing.easeOutQuart,\n        },\n      };\n\n      return dealWithAnimation(withAnimation ?? defaultWithAnimation)(\n        toValue,\n        (isFinished: boolean) => {\n          \"worklet\";\n          if (isFinished)\n            onFinished && runOnJS(onFinished)();\n        },\n      );\n    },\n    [scrollAnimationDuration, withAnimation],\n  );\n\n  const endWithSpring = React.useCallback(\n    (scrollEndTranslationValue: number,\n      scrollEndVelocityValue: number,\n      onFinished?: () => void,\n    ) => {\n      \"worklet\";\n      const origin = translation.value;\n      const velocity = scrollEndVelocityValue;\n      // Default to scroll in the direction of the slide (with deceleration)\n      let finalTranslation: number = withDecay({ velocity, deceleration: 0.999 });\n\n      // If the distance of the swipe exceeds the max scroll distance, keep the view at the current position\n      if (maxScrollDistancePerSwipeIsSet && Math.abs(scrollEndTranslationValue) > maxScrollDistancePerSwipe) {\n        finalTranslation = origin;\n      }\n      else {\n        /**\n         * The page size is the same as the item size.\n         * If direction is vertical, the page size is the height of the item.\n         * If direction is horizontal, the page size is the width of the item.\n        *\n        * `page size` equals to `size` variable.\n        * */\n\n        // calculate target \"nextPage\" based on the final pan position and the velocity of\n        // the pan gesture at termination; this allows for a quick \"flick\" to indicate a far\n        // off page change.\n        const nextPage = -Math.round((origin + velocity * 2) / size);\n\n        if (pagingEnabled) {\n          // we'll never go further than a single page away from the current page when paging\n          // is enabled.\n\n          // distance with direction\n          const offset = -(scrollEndTranslationValue >= 0 ? 1 : -1); // 1 or -1\n          const computed = offset < 0 ? Math.ceil : Math.floor;\n          const page = computed(-origin / size);\n\n          const velocityDirection = -Math.sign(velocity);\n          if (page === nextPage || velocityDirection !== offset) {\n            // not going anywhere! Velocity was insufficient to overcome the distance to get to a\n            // further page. Let's reset gently to the current page.\n            finalTranslation = withSpring(withProcessTranslation(-page * size), onFinished);\n          }\n          else if (loop) {\n            const finalPage = page + offset;\n            finalTranslation = withSpring(withProcessTranslation(-finalPage * size), onFinished);\n          }\n          else {\n            const finalPage = Math.min(maxPage - 1, Math.max(0, page + offset));\n            finalTranslation = withSpring(withProcessTranslation(-finalPage * size), onFinished);\n          }\n        }\n\n        if (!pagingEnabled && snapEnabled) {\n          // scroll to the nearest item\n          finalTranslation = withSpring(withProcessTranslation(-nextPage * size), onFinished);\n        }\n      }\n\n      translation.value = finalTranslation;\n\n      function withProcessTranslation(translation: number) {\n        if (!loop && !overscrollEnabled) {\n          const limit = getLimit();\n          const sign = Math.sign(translation);\n          return sign * Math.max(0, Math.min(limit, Math.abs(translation)));\n        }\n\n        return translation;\n      }\n    },\n    [\n      withSpring,\n      size,\n      maxPage,\n      loop,\n      snapEnabled,\n      translation,\n      pagingEnabled,\n      maxScrollDistancePerSwipe,\n      maxScrollDistancePerSwipeIsSet,\n    ],\n  );\n\n  const onFinish = React.useCallback(\n    (isFinished: boolean) => {\n      \"worklet\";\n      if (isFinished) {\n        touching.value = false;\n        onScrollEnd && runOnJS(onScrollEnd)();\n      }\n    },\n    [onScrollEnd, touching],\n  );\n\n  const activeDecay = React.useCallback(() => {\n    \"worklet\";\n    touching.value = true;\n    translation.value = withDecay(\n      { velocity: scrollEndVelocity.value },\n      isFinished => onFinish(isFinished as boolean),\n    );\n  }, [onFinish, scrollEndVelocity.value, touching, translation]);\n\n  const resetBoundary = React.useCallback(() => {\n    \"worklet\";\n    if (touching.value)\n      return;\n\n    if (translation.value > 0) {\n      if (scrollEndTranslation.value < 0) {\n        activeDecay();\n        return;\n      }\n      if (!loop) {\n        translation.value = withSpring(0);\n        return;\n      }\n    }\n\n    if (translation.value < -((maxPage - 1) * size)) {\n      if (scrollEndTranslation.value > 0) {\n        activeDecay();\n        return;\n      }\n      if (!loop)\n        translation.value = withSpring(-((maxPage - 1) * size));\n    }\n  }, [\n    touching.value,\n    translation,\n    maxPage,\n    size,\n    scrollEndTranslation.value,\n    loop,\n    activeDecay,\n    withSpring,\n  ]);\n\n  useAnimatedReaction(\n    () => translation.value,\n    () => {\n      if (!pagingEnabled)\n        resetBoundary();\n    },\n    [pagingEnabled, resetBoundary],\n  );\n\n  function withProcessTranslation(translation: number) {\n    \"worklet\";\n\n    if (!loop && !overscrollEnabled) {\n      const limit = getLimit();\n      const sign = Math.sign(translation);\n      return sign * Math.max(0, Math.min(limit, Math.abs(translation)));\n    }\n\n    return translation;\n  }\n\n  const onGestureStart = useCallback((_: PanGestureHandlerEventPayload) => {\n    \"worklet\";\n\n    touching.value = true;\n    validStart.value = true;\n    onScrollStart && runOnJS(onScrollStart)();\n\n    max.value = (maxPage - 1) * size;\n    if (!loop && !overscrollEnabled)\n      max.value = getLimit();\n\n    panOffset.value = translation.value;\n  }, [\n    max,\n    size,\n    maxPage,\n    loop,\n    touching,\n    panOffset,\n    validStart,\n    translation,\n    overscrollEnabled,\n    getLimit,\n    onScrollStart,\n  ]);\n\n  const onGestureUpdate = useCallback((e: PanGestureHandlerEventPayload) => {\n    \"worklet\";\n\n    if (panOffset.value === undefined) {\n      // This may happen if `onGestureStart` is called as a part of the\n      // JS thread (instead of the UI thread / worklet). If so, when\n      // `onGestureStart` sets panOffset.value, the set will be asynchronous,\n      // and so it may not actually occur before `onGestureUpdate` is called.\n      //\n      // Keeping this value as `undefined` when it is not active protects us\n      // from the situation where we may use the previous value for panOffset\n      // instead; this would cause a visual flicker in the carousel.\n\n      // console.warn(\"onGestureUpdate: panOffset is undefined\");\n      return;\n    }\n\n    if (validStart.value) {\n      validStart.value = false;\n      cancelAnimation(translation);\n    }\n    touching.value = true;\n    const { translationX, translationY } = e;\n\n    let panTranslation = isHorizontal.value\n      ? translationX\n      : translationY;\n\n    if (fixedDirection === \"negative\")\n      panTranslation = -Math.abs(panTranslation);\n\n    else if (fixedDirection === \"positive\")\n      panTranslation = +Math.abs(panTranslation);\n\n    if (!loop) {\n      if ((translation.value > 0 || translation.value < -max.value)) {\n        const boundary = translation.value > 0 ? 0 : -max.value;\n        const fixed = boundary - panOffset.value;\n        const dynamic = panTranslation - fixed;\n        translation.value = boundary + dynamic * 0.5;\n        return;\n      }\n    }\n\n    const translationValue = panOffset.value + panTranslation;\n    translation.value = translationValue;\n  }, [\n    isHorizontal,\n    max,\n    panOffset,\n    loop,\n    overscrollEnabled,\n    fixedDirection,\n    translation,\n    validStart,\n    touching,\n  ]);\n\n  const onGestureEnd = useCallback((e: GestureStateChangeEvent<PanGestureHandlerEventPayload>, _success: boolean) => {\n    \"worklet\";\n\n    if (panOffset.value === undefined) {\n      // console.warn(\"onGestureEnd: panOffset is undefined\");\n      return;\n    }\n\n    const { velocityX, velocityY, translationX, translationY } = e;\n    const scrollEndVelocityValue = isHorizontal.value\n      ? velocityX\n      : velocityY;\n    scrollEndVelocity.value = scrollEndVelocityValue; // may update async: see https://docs.swmansion.com/react-native-reanimated/docs/core/useSharedValue#remarks\n\n    let panTranslation = isHorizontal.value\n      ? translationX\n      : translationY;\n\n    if (fixedDirection === \"negative\")\n      panTranslation = -Math.abs(panTranslation);\n\n    else if (fixedDirection === \"positive\")\n      panTranslation = +Math.abs(panTranslation);\n\n    scrollEndTranslation.value = panTranslation; // may update async: see https://docs.swmansion.com/react-native-reanimated/docs/core/useSharedValue#remarks\n\n    const totalTranslation = scrollEndVelocityValue + panTranslation;\n\n    /**\n     * If the maximum scroll distance is set and the translation `exceeds the maximum scroll distance`,\n     * the carousel will keep the view at the current position.\n    */\n    if (\n      maxScrollDistancePerSwipeIsSet && Math.abs(totalTranslation) > maxScrollDistancePerSwipe\n    ) {\n      const nextPage = Math.round((panOffset.value + maxScrollDistancePerSwipe * Math.sign(totalTranslation)) / size) * size;\n      translation.value = withSpring(withProcessTranslation(nextPage), onScrollEnd);\n    }\n    /**\n     * If the minimum scroll distance is set and the translation `didn't exceeds the minimum scroll distance`,\n     * the carousel will keep the view at the current position.\n    */\n    else if (\n      minScrollDistancePerSwipeIsSet && Math.abs(totalTranslation) < minScrollDistancePerSwipe\n    ) {\n      const nextPage = Math.round((panOffset.value + minScrollDistancePerSwipe * Math.sign(totalTranslation)) / size) * size;\n      translation.value = withSpring(withProcessTranslation(nextPage), onScrollEnd);\n    }\n    else {\n      endWithSpring(panTranslation, scrollEndVelocityValue, onScrollEnd);\n    }\n\n    if (!loop)\n      touching.value = false;\n\n    panOffset.value = undefined;\n  }, [\n    size,\n    loop,\n    touching,\n    panOffset,\n    translation,\n    isHorizontal,\n    scrollEndVelocity,\n    scrollEndTranslation,\n    fixedDirection,\n    maxScrollDistancePerSwipeIsSet,\n    maxScrollDistancePerSwipe,\n    maxScrollDistancePerSwipeIsSet,\n    minScrollDistancePerSwipe,\n    endWithSpring,\n    withSpring,\n    onScrollEnd,\n  ]);\n\n  const gesture = usePanGestureProxy({\n    onConfigurePanGesture,\n    onGestureStart,\n    onGestureUpdate,\n    onGestureEnd,\n    options: { enabled },\n  });\n\n  return (\n    <GestureDetector gesture={gesture}>\n      <Animated.View\n        ref={containerRef}\n        testID={testID}\n        style={style}\n        onTouchStart={onTouchBegin}\n        onTouchEnd={onTouchEnd}\n        accessibilityActions={accessibilityActions}\n        accessibilityLabel={accessibilityLabel}\n        accessibilityRole={accessibilityRole}\n        accessible={accessible}\n        onAccessibilityAction={onAccessibilityAction}\n      >\n        {props.children}\n      </Animated.View>\n    </GestureDetector>\n  );\n};\n\nexport const ScrollViewGesture = IScrollViewGesture;\n"],"mappings":"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","ignoreList":[]}