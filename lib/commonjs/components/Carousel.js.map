{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_reactNativeGestureHandler","_reactNativeReanimated","_ItemRenderer","_ScrollViewGesture","_useAutoPlay","_useCarouselController","_useCommonVariables","_useInitProps","_useLayoutConfig","_useOnProgressChange","_usePropsErrorBoundary","_store","_computedWithAutoFillData","e","__esModule","default","Carousel","React","forwardRef","_props","ref","props","useInitProps","testID","loop","autoFillData","data","dataLength","rawDataLength","mode","style","width","height","vertical","autoPlay","windowSize","autoPlayReverse","autoPlayInterval","scrollAnimationDuration","withAnimation","fixedDirection","renderItem","onScrollEnd","onSnapToItem","onScrollStart","onProgressChange","customAnimation","defaultIndex","accessibilityActions","accessibilityLabel","accessibilityRole","accessible","onAccessibilityAction","commonVariables","useCommonVariables","size","handlerOffset","offsetX","useDerivedValue","totalSize","x","value","isNaN","usePropsErrorBoundary","progressValue","useOnProgressChange","carouselController","useCarouselController","duration","runOnJS","_onScrollEnd","next","prev","scrollTo","getSharedIndex","getCurrentIndex","start","startAutoPlay","pause","pauseAutoPlay","useAutoPlay","useCallback","_sharedIndex","Math","round","realIndex","computedRealIndexWithAutoFillData","index","scrollViewGestureOnScrollStart","scrollViewGestureOnScrollEnd","scrollViewGestureOnTouchBegin","scrollViewGestureOnTouchEnd","useImperativeHandle","layoutConfig","useLayoutConfig","createElement","GestureHandlerRootView","CTX","Provider","common","ScrollViewGesture","key","translation","styles","container","itemsVertical","itemsHorizontal","onTouchBegin","onTouchEnd","ItemRenderer","_default","exports","StyleSheet","create","overflow","flexDirection"],"sources":["Carousel.tsx"],"sourcesContent":["import React from \"react\";\nimport { StyleSheet } from \"react-native\";\nimport { GestureHandlerRootView } from \"react-native-gesture-handler\";\nimport { runOnJS, useDerivedValue } from \"react-native-reanimated\";\n\nimport { ItemRenderer } from \"./ItemRenderer\";\nimport { ScrollViewGesture } from \"./ScrollViewGesture\";\n\nimport { useAutoPlay } from \"../hooks/useAutoPlay\";\nimport { useCarouselController } from \"../hooks/useCarouselController\";\nimport { useCommonVariables } from \"../hooks/useCommonVariables\";\nimport { useInitProps } from \"../hooks/useInitProps\";\nimport { useLayoutConfig } from \"../hooks/useLayoutConfig\";\nimport { useOnProgressChange } from \"../hooks/useOnProgressChange\";\nimport { usePropsErrorBoundary } from \"../hooks/usePropsErrorBoundary\";\nimport { CTX } from \"../store\";\nimport type { ICarouselInstance, TCarouselProps } from \"../types\";\nimport { computedRealIndexWithAutoFillData } from \"../utils/computed-with-auto-fill-data\";\n\nconst Carousel = React.forwardRef<ICarouselInstance, TCarouselProps<any>>(\n  (_props, ref) => {\n    const props = useInitProps(_props);\n\n    const {\n      testID,\n      loop,\n      autoFillData,\n      // Fill data with autoFillData\n      data,\n      // Length of fill data\n      dataLength,\n      // Length of raw data\n      rawDataLength,\n      mode,\n      style,\n      width,\n      height,\n      vertical,\n      autoPlay,\n      windowSize,\n      autoPlayReverse,\n      autoPlayInterval,\n      scrollAnimationDuration,\n      withAnimation,\n      fixedDirection,\n      renderItem,\n      onScrollEnd,\n      onSnapToItem,\n      onScrollStart,\n      onProgressChange,\n      customAnimation,\n      defaultIndex,\n      accessibilityActions,\n      accessibilityLabel,\n      accessibilityRole,\n      accessible,\n      onAccessibilityAction,\n    } = props;\n\n    const commonVariables = useCommonVariables(props);\n    const { size, handlerOffset } = commonVariables;\n\n    const offsetX = useDerivedValue(() => {\n      const totalSize = size * dataLength;\n      const x = handlerOffset.value % totalSize;\n\n      if (!loop) return handlerOffset.value;\n\n      return isNaN(x) ? 0 : x;\n    }, [loop, size, dataLength]);\n\n    usePropsErrorBoundary({ ...props, dataLength });\n    const progressValue = useOnProgressChange({\n      autoFillData,\n      loop,\n      size,\n      offsetX,\n      rawDataLength,\n      onProgressChange,\n    });\n\n    const carouselController = useCarouselController({\n      loop,\n      size,\n      dataLength,\n      autoFillData,\n      handlerOffset,\n      withAnimation,\n      defaultIndex,\n      fixedDirection,\n      duration: scrollAnimationDuration,\n      onScrollEnd: () => runOnJS(_onScrollEnd)(),\n      onScrollStart: () => !!onScrollStart && runOnJS(onScrollStart)(),\n    });\n\n    const { next, prev, scrollTo, getSharedIndex, getCurrentIndex } =\n      carouselController;\n\n    const { start: startAutoPlay, pause: pauseAutoPlay } = useAutoPlay({\n      autoPlay,\n      autoPlayInterval,\n      autoPlayReverse,\n      carouselController,\n    });\n\n    const _onScrollEnd = React.useCallback(() => {\n      const _sharedIndex = Math.round(getSharedIndex());\n\n      const realIndex = computedRealIndexWithAutoFillData({\n        index: _sharedIndex,\n        dataLength: rawDataLength,\n        loop,\n        autoFillData,\n      });\n\n      if (onSnapToItem) onSnapToItem(realIndex);\n\n      if (onScrollEnd) onScrollEnd(realIndex);\n    }, [\n      loop,\n      autoFillData,\n      rawDataLength,\n      getSharedIndex,\n      onSnapToItem,\n      onScrollEnd,\n    ]);\n\n    const scrollViewGestureOnScrollStart = React.useCallback(() => {\n      pauseAutoPlay();\n      onScrollStart?.();\n    }, [onScrollStart, pauseAutoPlay]);\n\n    const scrollViewGestureOnScrollEnd = React.useCallback(() => {\n      startAutoPlay();\n      _onScrollEnd();\n    }, [_onScrollEnd, startAutoPlay]);\n\n    const scrollViewGestureOnTouchBegin = React.useCallback(pauseAutoPlay, [\n      pauseAutoPlay,\n    ]);\n\n    const scrollViewGestureOnTouchEnd = React.useCallback(startAutoPlay, [\n      startAutoPlay,\n    ]);\n\n    React.useImperativeHandle(\n      ref,\n      () => ({\n        next,\n        prev,\n        getCurrentIndex,\n        scrollTo,\n        progressValue,\n      }),\n      [getCurrentIndex, next, prev, scrollTo],\n    );\n\n    const layoutConfig = useLayoutConfig({ ...props, size });\n\n    return (\n      <GestureHandlerRootView>\n        <CTX.Provider value={{ props, common: commonVariables }}>\n          <ScrollViewGesture\n            key={mode}\n            size={size}\n            translation={handlerOffset}\n            style={[\n              styles.container,\n              {\n                width: width || \"100%\",\n                height: height || \"100%\",\n              },\n              style,\n              vertical ? styles.itemsVertical : styles.itemsHorizontal,\n            ]}\n            testID={testID}\n            onScrollStart={scrollViewGestureOnScrollStart}\n            onScrollEnd={scrollViewGestureOnScrollEnd}\n            onTouchBegin={scrollViewGestureOnTouchBegin}\n            onTouchEnd={scrollViewGestureOnTouchEnd}\n            accessibilityActions={accessibilityActions}\n            accessibilityLabel={accessibilityLabel}\n            accessibilityRole={accessibilityRole}\n            accessible={accessible}\n            onAccessibilityAction={onAccessibilityAction}\n          >\n            <ItemRenderer\n              data={data}\n              dataLength={dataLength}\n              rawDataLength={rawDataLength}\n              loop={loop}\n              size={size}\n              windowSize={windowSize}\n              autoFillData={autoFillData}\n              offsetX={offsetX}\n              handlerOffset={handlerOffset}\n              layoutConfig={layoutConfig}\n              renderItem={renderItem}\n              customAnimation={customAnimation}\n            />\n          </ScrollViewGesture>\n        </CTX.Provider>\n      </GestureHandlerRootView>\n    );\n  },\n);\n\nexport default Carousel as <T extends any>(\n  props: React.PropsWithChildren<TCarouselProps<T>>,\n) => React.ReactElement;\n\nconst styles = StyleSheet.create({\n  container: {\n    overflow: \"hidden\",\n  },\n  itemsHorizontal: {\n    flexDirection: \"row\",\n  },\n  itemsVertical: {\n    flexDirection: \"column\",\n  },\n});\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AACA,IAAAE,0BAAA,GAAAF,OAAA;AACA,IAAAG,sBAAA,GAAAH,OAAA;AAEA,IAAAI,aAAA,GAAAJ,OAAA;AACA,IAAAK,kBAAA,GAAAL,OAAA;AAEA,IAAAM,YAAA,GAAAN,OAAA;AACA,IAAAO,sBAAA,GAAAP,OAAA;AACA,IAAAQ,mBAAA,GAAAR,OAAA;AACA,IAAAS,aAAA,GAAAT,OAAA;AACA,IAAAU,gBAAA,GAAAV,OAAA;AACA,IAAAW,oBAAA,GAAAX,OAAA;AACA,IAAAY,sBAAA,GAAAZ,OAAA;AACA,IAAAa,MAAA,GAAAb,OAAA;AAEA,IAAAc,yBAAA,GAAAd,OAAA;AAA0F,SAAAD,uBAAAgB,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAE,OAAA,EAAAF,CAAA;AAE1F,MAAMG,QAAQ,gBAAGC,cAAK,CAACC,UAAU,CAC/B,CAACC,MAAM,EAAEC,GAAG,KAAK;EACf,MAAMC,KAAK,GAAG,IAAAC,0BAAY,EAACH,MAAM,CAAC;EAElC,MAAM;IACJI,MAAM;IACNC,IAAI;IACJC,YAAY;IACZ;IACAC,IAAI;IACJ;IACAC,UAAU;IACV;IACAC,aAAa;IACbC,IAAI;IACJC,KAAK;IACLC,KAAK;IACLC,MAAM;IACNC,QAAQ;IACRC,QAAQ;IACRC,UAAU;IACVC,eAAe;IACfC,gBAAgB;IAChBC,uBAAuB;IACvBC,aAAa;IACbC,cAAc;IACdC,UAAU;IACVC,WAAW;IACXC,YAAY;IACZC,aAAa;IACbC,gBAAgB;IAChBC,eAAe;IACfC,YAAY;IACZC,oBAAoB;IACpBC,kBAAkB;IAClBC,iBAAiB;IACjBC,UAAU;IACVC;EACF,CAAC,GAAG/B,KAAK;EAET,MAAMgC,eAAe,GAAG,IAAAC,sCAAkB,EAACjC,KAAK,CAAC;EACjD,MAAM;IAAEkC,IAAI;IAAEC;EAAc,CAAC,GAAGH,eAAe;EAE/C,MAAMI,OAAO,GAAG,IAAAC,sCAAe,EAAC,MAAM;IACpC,MAAMC,SAAS,GAAGJ,IAAI,GAAG5B,UAAU;IACnC,MAAMiC,CAAC,GAAGJ,aAAa,CAACK,KAAK,GAAGF,SAAS;IAEzC,IAAI,CAACnC,IAAI,EAAE,OAAOgC,aAAa,CAACK,KAAK;IAErC,OAAOC,KAAK,CAACF,CAAC,CAAC,GAAG,CAAC,GAAGA,CAAC;EACzB,CAAC,EAAE,CAACpC,IAAI,EAAE+B,IAAI,EAAE5B,UAAU,CAAC,CAAC;EAE5B,IAAAoC,4CAAqB,EAAC;IAAE,GAAG1C,KAAK;IAAEM;EAAW,CAAC,CAAC;EAC/C,MAAMqC,aAAa,GAAG,IAAAC,wCAAmB,EAAC;IACxCxC,YAAY;IACZD,IAAI;IACJ+B,IAAI;IACJE,OAAO;IACP7B,aAAa;IACbiB;EACF,CAAC,CAAC;EAEF,MAAMqB,kBAAkB,GAAG,IAAAC,4CAAqB,EAAC;IAC/C3C,IAAI;IACJ+B,IAAI;IACJ5B,UAAU;IACVF,YAAY;IACZ+B,aAAa;IACbjB,aAAa;IACbQ,YAAY;IACZP,cAAc;IACd4B,QAAQ,EAAE9B,uBAAuB;IACjCI,WAAW,EAAEA,CAAA,KAAM,IAAA2B,8BAAO,EAACC,YAAY,CAAC,CAAC,CAAC;IAC1C1B,aAAa,EAAEA,CAAA,KAAM,CAAC,CAACA,aAAa,IAAI,IAAAyB,8BAAO,EAACzB,aAAa,CAAC,CAAC;EACjE,CAAC,CAAC;EAEF,MAAM;IAAE2B,IAAI;IAAEC,IAAI;IAAEC,QAAQ;IAAEC,cAAc;IAAEC;EAAgB,CAAC,GAC7DT,kBAAkB;EAEpB,MAAM;IAAEU,KAAK,EAAEC,aAAa;IAAEC,KAAK,EAAEC;EAAc,CAAC,GAAG,IAAAC,wBAAW,EAAC;IACjE9C,QAAQ;IACRG,gBAAgB;IAChBD,eAAe;IACf8B;EACF,CAAC,CAAC;EAEF,MAAMI,YAAY,GAAGrD,cAAK,CAACgE,WAAW,CAAC,MAAM;IAC3C,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACV,cAAc,CAAC,CAAC,CAAC;IAEjD,MAAMW,SAAS,GAAG,IAAAC,2DAAiC,EAAC;MAClDC,KAAK,EAAEL,YAAY;MACnBvD,UAAU,EAAEC,aAAa;MACzBJ,IAAI;MACJC;IACF,CAAC,CAAC;IAEF,IAAIkB,YAAY,EAAEA,YAAY,CAAC0C,SAAS,CAAC;IAEzC,IAAI3C,WAAW,EAAEA,WAAW,CAAC2C,SAAS,CAAC;EACzC,CAAC,EAAE,CACD7D,IAAI,EACJC,YAAY,EACZG,aAAa,EACb8C,cAAc,EACd/B,YAAY,EACZD,WAAW,CACZ,CAAC;EAEF,MAAM8C,8BAA8B,GAAGvE,cAAK,CAACgE,WAAW,CAAC,MAAM;IAC7DF,aAAa,CAAC,CAAC;IACfnC,aAAa,aAAbA,aAAa,eAAbA,aAAa,CAAG,CAAC;EACnB,CAAC,EAAE,CAACA,aAAa,EAAEmC,aAAa,CAAC,CAAC;EAElC,MAAMU,4BAA4B,GAAGxE,cAAK,CAACgE,WAAW,CAAC,MAAM;IAC3DJ,aAAa,CAAC,CAAC;IACfP,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACA,YAAY,EAAEO,aAAa,CAAC,CAAC;EAEjC,MAAMa,6BAA6B,GAAGzE,cAAK,CAACgE,WAAW,CAACF,aAAa,EAAE,CACrEA,aAAa,CACd,CAAC;EAEF,MAAMY,2BAA2B,GAAG1E,cAAK,CAACgE,WAAW,CAACJ,aAAa,EAAE,CACnEA,aAAa,CACd,CAAC;EAEF5D,cAAK,CAAC2E,mBAAmB,CACvBxE,GAAG,EACH,OAAO;IACLmD,IAAI;IACJC,IAAI;IACJG,eAAe;IACfF,QAAQ;IACRT;EACF,CAAC,CAAC,EACF,CAACW,eAAe,EAAEJ,IAAI,EAAEC,IAAI,EAAEC,QAAQ,CACxC,CAAC;EAED,MAAMoB,YAAY,GAAG,IAAAC,gCAAe,EAAC;IAAE,GAAGzE,KAAK;IAAEkC;EAAK,CAAC,CAAC;EAExD,oBACE3D,MAAA,CAAAmB,OAAA,CAAAgF,aAAA,CAAC/F,0BAAA,CAAAgG,sBAAsB,qBACrBpG,MAAA,CAAAmB,OAAA,CAAAgF,aAAA,CAACpF,MAAA,CAAAsF,GAAG,CAACC,QAAQ;IAACrC,KAAK,EAAE;MAAExC,KAAK;MAAE8E,MAAM,EAAE9C;IAAgB;EAAE,gBACtDzD,MAAA,CAAAmB,OAAA,CAAAgF,aAAA,CAAC5F,kBAAA,CAAAiG,iBAAiB;IAChBC,GAAG,EAAExE,IAAK;IACV0B,IAAI,EAAEA,IAAK;IACX+C,WAAW,EAAE9C,aAAc;IAC3B1B,KAAK,EAAE,CACLyE,MAAM,CAACC,SAAS,EAChB;MACEzE,KAAK,EAAEA,KAAK,IAAI,MAAM;MACtBC,MAAM,EAAEA,MAAM,IAAI;IACpB,CAAC,EACDF,KAAK,EACLG,QAAQ,GAAGsE,MAAM,CAACE,aAAa,GAAGF,MAAM,CAACG,eAAe,CACxD;IACFnF,MAAM,EAAEA,MAAO;IACfqB,aAAa,EAAE4C,8BAA+B;IAC9C9C,WAAW,EAAE+C,4BAA6B;IAC1CkB,YAAY,EAAEjB,6BAA8B;IAC5CkB,UAAU,EAAEjB,2BAA4B;IACxC3C,oBAAoB,EAAEA,oBAAqB;IAC3CC,kBAAkB,EAAEA,kBAAmB;IACvCC,iBAAiB,EAAEA,iBAAkB;IACrCC,UAAU,EAAEA,UAAW;IACvBC,qBAAqB,EAAEA;EAAsB,gBAE7CxD,MAAA,CAAAmB,OAAA,CAAAgF,aAAA,CAAC7F,aAAA,CAAA2G,YAAY;IACXnF,IAAI,EAAEA,IAAK;IACXC,UAAU,EAAEA,UAAW;IACvBC,aAAa,EAAEA,aAAc;IAC7BJ,IAAI,EAAEA,IAAK;IACX+B,IAAI,EAAEA,IAAK;IACXpB,UAAU,EAAEA,UAAW;IACvBV,YAAY,EAAEA,YAAa;IAC3BgC,OAAO,EAAEA,OAAQ;IACjBD,aAAa,EAAEA,aAAc;IAC7BqC,YAAY,EAAEA,YAAa;IAC3BpD,UAAU,EAAEA,UAAW;IACvBK,eAAe,EAAEA;EAAgB,CAClC,CACgB,CACP,CACQ,CAAC;AAE7B,CACF,CAAC;AAAC,IAAAgE,QAAA,GAAAC,OAAA,CAAAhG,OAAA,GAEaC,QAAQ;AAIvB,MAAMuF,MAAM,GAAGS,uBAAU,CAACC,MAAM,CAAC;EAC/BT,SAAS,EAAE;IACTU,QAAQ,EAAE;EACZ,CAAC;EACDR,eAAe,EAAE;IACfS,aAAa,EAAE;EACjB,CAAC;EACDV,aAAa,EAAE;IACbU,aAAa,EAAE;EACjB;AACF,CAAC,CAAC","ignoreList":[]}