{"version":3,"names":["_reactNativeReanimated","require","_computedWithAutoFillData","useOnProgressChange","opts","autoFillData","loop","offsetX","size","rawDataLength","onProgressChange","isFunc","useAnimatedReaction","value","_value","computedOffsetXValueWithAutoFillData","Math","max","min","absoluteProgress","abs","runOnJS"],"sources":["useOnProgressChange.ts"],"sourcesContent":["import type Animated from \"react-native-reanimated\";\nimport {\n  runOnJS,\n  useAnimatedReaction,\n} from \"react-native-reanimated\";\n\nimport type { TCarouselProps } from \"../types\";\nimport { computedOffsetXValueWithAutoFillData } from \"../utils/computed-with-auto-fill-data\";\n\nexport function useOnProgressChange(\n  opts: {\n    size: number\n    autoFillData: boolean\n    loop: boolean\n    offsetX: Animated.SharedValue<number>\n    rawDataLength: number\n  } & Pick<TCarouselProps, \"onProgressChange\">,\n) {\n  const { autoFillData, loop, offsetX, size, rawDataLength, onProgressChange }\n        = opts;\n\n  // remember `isFunc` here because we can't accurately check typeof\n  // from within useAnimatedReaction because its code has been workletized;\n  // the `onProgressChange` value will be typeof \"object\" from within\n  // the worklet code even if it's a function.\n  const isFunc = typeof onProgressChange === \"function\";\n\n  useAnimatedReaction(\n    () => offsetX.value,\n    (_value) => {\n      let value = computedOffsetXValueWithAutoFillData({\n        value: _value,\n        rawDataLength,\n        size,\n        autoFillData,\n        loop,\n      });\n\n      if (!loop) {\n        value = Math.max(\n          -((rawDataLength - 1) * size),\n          Math.min(value, 0),\n        );\n      }\n\n      let absoluteProgress = Math.abs(value / size);\n\n      if (value > 0)\n        absoluteProgress = rawDataLength - absoluteProgress;\n\n      if (onProgressChange) {\n        if (isFunc)\n          runOnJS(onProgressChange)(value, absoluteProgress);\n\n        else\n          onProgressChange.value = absoluteProgress;\n      }\n    },\n    [loop, autoFillData, rawDataLength, onProgressChange],\n  );\n}\n"],"mappings":";;;;;;AACA,IAAAA,sBAAA,GAAAC,OAAA;AAMA,IAAAC,yBAAA,GAAAD,OAAA;AAEO,SAASE,mBAAmBA,CACjCC,IAM4C,EAC5C;EACA,MAAM;IAAEC,YAAY;IAAEC,IAAI;IAAEC,OAAO;IAAEC,IAAI;IAAEC,aAAa;IAAEC;EAAiB,CAAC,GACpEN,IAAI;;EAEZ;EACA;EACA;EACA;EACA,MAAMO,MAAM,GAAG,OAAOD,gBAAgB,KAAK,UAAU;EAErD,IAAAE,0CAAmB,EACjB,MAAML,OAAO,CAACM,KAAK,EAClBC,MAAM,IAAK;IACV,IAAID,KAAK,GAAG,IAAAE,8DAAoC,EAAC;MAC/CF,KAAK,EAAEC,MAAM;MACbL,aAAa;MACbD,IAAI;MACJH,YAAY;MACZC;IACF,CAAC,CAAC;IAEF,IAAI,CAACA,IAAI,EAAE;MACTO,KAAK,GAAGG,IAAI,CAACC,GAAG,CACd,EAAE,CAACR,aAAa,GAAG,CAAC,IAAID,IAAI,CAAC,EAC7BQ,IAAI,CAACE,GAAG,CAACL,KAAK,EAAE,CAAC,CACnB,CAAC;IACH;IAEA,IAAIM,gBAAgB,GAAGH,IAAI,CAACI,GAAG,CAACP,KAAK,GAAGL,IAAI,CAAC;IAE7C,IAAIK,KAAK,GAAG,CAAC,EACXM,gBAAgB,GAAGV,aAAa,GAAGU,gBAAgB;IAErD,IAAIT,gBAAgB,EAAE;MACpB,IAAIC,MAAM,EACR,IAAAU,8BAAO,EAACX,gBAAgB,CAAC,CAACG,KAAK,EAAEM,gBAAgB,CAAC,CAAC,KAGnDT,gBAAgB,CAACG,KAAK,GAAGM,gBAAgB;IAC7C;EACF,CAAC,EACD,CAACb,IAAI,EAAED,YAAY,EAAEI,aAAa,EAAEC,gBAAgB,CACtD,CAAC;AACH","ignoreList":[]}