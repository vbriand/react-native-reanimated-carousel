{"version":3,"sources":["useCarouselController.tsx"],"names":["useCarouselController","options","size","loop","dataLength","handlerOffset","withAnimation","defaultIndex","duration","autoFillData","fixedDirection","dataInfo","React","useMemo","length","disable","originalLength","index","sharedIndex","sharedPreIndex","currentFixedPage","useCallback","Math","round","value","fixed","abs","setSharedIndex","newSharedIndex","current","handlerOffsetValue","toInt","isPositive","i","newSharedIndexValue","rawDataLength","getCurrentIndex","realIndex","canSliding","onScrollEnd","onScrollStart","scrollWithTiming","toValue","onFinished","callback","isFinished","defaultWithAnimation","type","config","easing","Easing","easeOutQuart","next","opts","count","animated","nextPage","prev","prevPage","to","direction","offset","totalSize","isCloseToNextLoop","finalOffset","floor","scrollTo","n","getSharedIndex"],"mappings":"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","sourcesContent":["import React, { useRef } from \"react\";\nimport type Animated from \"react-native-reanimated\";\nimport {\n  runOnJS,\n  useAnimatedReaction,\n  useSharedValue,\n} from \"react-native-reanimated\";\n\nimport { Easing } from \"../constants\";\nimport type {\n  TCarouselActionOptions,\n  TCarouselProps,\n  WithTimingAnimation,\n} from \"../types\";\nimport { computedRealIndexWithAutoFillData, convertToSharedIndex } from \"../utils/computed-with-auto-fill-data\";\nimport { dealWithAnimation } from \"../utils/deal-with-animation\";\nimport { handlerOffsetDirection } from \"../utils/handleroffset-direction\";\nimport { round } from \"../utils/log\";\n\ninterface IOpts {\n  loop: boolean\n  size: number\n  dataLength: number\n  handlerOffset: Animated.SharedValue<number>\n  autoFillData: TCarouselProps[\"autoFillData\"]\n  withAnimation?: TCarouselProps[\"withAnimation\"]\n  fixedDirection?: TCarouselProps[\"fixedDirection\"]\n  duration?: number\n  defaultIndex?: number\n  onScrollStart?: () => void\n  onScrollEnd?: () => void\n}\n\nexport interface ICarouselController {\n  getSharedIndex: () => number\n  prev: (opts?: TCarouselActionOptions) => void\n  next: (opts?: TCarouselActionOptions) => void\n  getCurrentIndex: () => number\n  scrollTo: (opts?: TCarouselActionOptions) => void\n}\n\nexport function useCarouselController(options: IOpts): ICarouselController {\n  const {\n    size,\n    loop,\n    dataLength,\n    handlerOffset,\n    withAnimation,\n    defaultIndex = 0,\n    duration,\n    autoFillData,\n    fixedDirection,\n  } = options;\n\n  const dataInfo = React.useMemo(\n    () => ({\n      length: dataLength,\n      disable: !dataLength,\n      originalLength: dataLength,\n    }),\n    [dataLength],\n  );\n\n  const index = useSharedValue<number>(defaultIndex);\n  // The Index displayed to the user\n  const sharedIndex = useRef<number>(defaultIndex);\n  const sharedPreIndex = useRef<number>(defaultIndex);\n\n  const currentFixedPage = React.useCallback(() => {\n    if (loop)\n      return -Math.round(handlerOffset.value / size);\n\n    const fixed = (handlerOffset.value / size) % dataInfo.length;\n    return Math.round(\n      handlerOffset.value <= 0\n        ? Math.abs(fixed)\n        : Math.abs(fixed > 0 ? dataInfo.length - fixed : 0),\n    );\n  }, [handlerOffset, dataInfo, size, loop]);\n\n  function setSharedIndex(newSharedIndex: number) {\n    sharedIndex.current = newSharedIndex;\n  }\n\n  useAnimatedReaction(\n    () => {\n      const handlerOffsetValue = handlerOffset.value;\n      const toInt = round(handlerOffsetValue / size) % dataInfo.length;\n      const isPositive = handlerOffsetValue <= 0;\n      const i = isPositive\n        ? Math.abs(toInt)\n        : Math.abs(toInt > 0 ? dataInfo.length - toInt : 0);\n\n      const newSharedIndexValue = convertToSharedIndex({\n        loop,\n        rawDataLength: dataInfo.originalLength,\n        autoFillData: autoFillData!,\n        index: i,\n      });\n\n      return {\n        i,\n        newSharedIndexValue,\n      };\n    },\n    ({ i, newSharedIndexValue }) => {\n      index.value = i;\n      runOnJS(setSharedIndex)(newSharedIndexValue);\n    },\n    [\n      sharedPreIndex,\n      sharedIndex,\n      size,\n      dataInfo,\n      index,\n      loop,\n      autoFillData,\n      handlerOffset,\n    ],\n  );\n\n  const getCurrentIndex = React.useCallback(() => {\n    const realIndex = computedRealIndexWithAutoFillData({\n      index: index.value,\n      dataLength: dataInfo.originalLength,\n      loop,\n      autoFillData: autoFillData!,\n    });\n\n    return realIndex;\n  }, [index, autoFillData, dataInfo, loop]);\n\n  const canSliding = React.useCallback(() => {\n    return !dataInfo.disable;\n  }, [dataInfo]);\n\n  const onScrollEnd = React.useCallback(() => {\n    options.onScrollEnd?.();\n  }, [options]);\n\n  const onScrollStart = React.useCallback(() => {\n    options.onScrollStart?.();\n  }, [options]);\n\n  const scrollWithTiming = React.useCallback(\n    (toValue: number, onFinished?: () => void) => {\n      \"worklet\";\n      const callback = (isFinished: boolean) => {\n        \"worklet\";\n        if (isFinished) {\n          runOnJS(onScrollEnd)();\n          onFinished && runOnJS(onFinished)();\n        }\n      };\n\n      const defaultWithAnimation: WithTimingAnimation = {\n        type: \"timing\",\n        config: { duration, easing: Easing.easeOutQuart },\n      };\n\n      return dealWithAnimation(withAnimation ?? defaultWithAnimation)(\n        toValue,\n        callback,\n      );\n    },\n    [duration, withAnimation, onScrollEnd],\n  );\n\n  const next = React.useCallback(\n    (opts: TCarouselActionOptions = {}) => {\n      \"worklet\";\n      const { count = 1, animated = true, onFinished } = opts;\n      if (!canSliding() || (!loop && index.value >= dataInfo.length - 1))\n        return;\n\n      onScrollStart?.();\n\n      const nextPage = currentFixedPage() + count;\n      index.value = nextPage;\n\n      if (animated) {\n        handlerOffset.value = scrollWithTiming(\n          -nextPage * size,\n          onFinished,\n        ) as any;\n      }\n      else {\n        handlerOffset.value = -nextPage * size;\n        onFinished?.();\n      }\n    },\n    [\n      canSliding,\n      loop,\n      index,\n      dataInfo,\n      onScrollStart,\n      handlerOffset,\n      size,\n      scrollWithTiming,\n      currentFixedPage,\n    ],\n  );\n\n  const prev = React.useCallback(\n    (opts: TCarouselActionOptions = {}) => {\n      const { count = 1, animated = true, onFinished } = opts;\n      if (!canSliding() || (!loop && index.value <= 0)) return;\n\n      onScrollStart?.();\n\n      const prevPage = currentFixedPage() - count;\n      index.value = prevPage;\n\n      if (animated) {\n        handlerOffset.value = scrollWithTiming(\n          -prevPage * size,\n          onFinished,\n        );\n      }\n      else {\n        handlerOffset.value = -prevPage * size;\n        onFinished?.();\n      }\n    },\n    [\n      canSliding,\n      loop,\n      index,\n      onScrollStart,\n      handlerOffset,\n      size,\n      scrollWithTiming,\n      currentFixedPage,\n    ],\n  );\n\n  const to = React.useCallback(\n    (opts: { i: number; animated: boolean; onFinished?: () => void }) => {\n      const { i, animated = false, onFinished } = opts;\n      if (i === index.value) return;\n      if (!canSliding()) return;\n\n      onScrollStart?.();\n      // direction -> 1 | -1\n      const direction = handlerOffsetDirection(handlerOffset, fixedDirection);\n\n      // target offset\n      const offset = i * size * direction;\n      // page width size * page count\n      const totalSize = dataInfo.length * size;\n\n      let isCloseToNextLoop = false;\n\n      if (loop) {\n        isCloseToNextLoop\n          = Math.abs(handlerOffset.value % totalSize) / totalSize\n          >= 0.5;\n      }\n\n      const finalOffset\n        = (Math.floor(Math.abs(handlerOffset.value / totalSize))\n          + (isCloseToNextLoop ? 1 : 0))\n        * totalSize\n        * direction\n        + offset;\n\n      if (animated) {\n        index.value = i;\n        handlerOffset.value = scrollWithTiming(finalOffset, onFinished);\n      }\n      else {\n        handlerOffset.value = finalOffset;\n        index.value = i;\n        onFinished?.();\n      }\n    },\n    [\n      size,\n      loop,\n      index,\n      fixedDirection,\n      handlerOffset,\n      dataInfo.length,\n      canSliding,\n      onScrollStart,\n      scrollWithTiming,\n    ],\n  );\n\n  const scrollTo = React.useCallback(\n    (opts: TCarouselActionOptions = {}) => {\n      const { index: i, count, animated = false, onFinished } = opts;\n      if (typeof i === \"number\" && i > -1) {\n        to({ i, animated, onFinished });\n        return;\n      }\n\n      if (!count)\n        return;\n\n      const n = Math.round(count);\n\n      if (n < 0)\n        prev({ count: Math.abs(n), animated, onFinished });\n\n      else\n        next({ count: n, animated, onFinished });\n    },\n    [prev, next, to],\n  );\n\n  return {\n    next,\n    prev,\n    scrollTo,\n    getCurrentIndex,\n    getSharedIndex: () => sharedIndex.current,\n  };\n}\n"]}