{"version":3,"names":["omitZero","a","b","computeOffsetIfDataChanged","params","direction","handlerOffset","_handlerOffset","size","previousLength","currentLength","positionIndex","round","isPositive","Math","abs","parseInt","String","prevOffset","prevIndex","changedLength","changedOffset"],"sources":["compute-offset-if-data-changed.ts"],"sourcesContent":["export function omitZero(a: number, b: number) {\n  \"worklet\";\n  if (a === 0)\n    return 0;\n\n  return b;\n}\n\nexport function computeOffsetIfDataChanged(params: {\n  direction: number\n  handlerOffset: number\n  size: number\n  previousLength: number\n  currentLength: number\n}) {\n  \"worklet\";\n  const { direction, handlerOffset: _handlerOffset, size, previousLength, currentLength } = params;\n\n  let handlerOffset = _handlerOffset;\n  let positionIndex;\n  let round;\n\n  const isPositive = direction < 0;\n\n  if (isPositive) {\n    positionIndex = (Math.abs(handlerOffset)) / size;\n    round = parseInt(String(omitZero(previousLength, positionIndex / previousLength)));\n  }\n  else {\n    positionIndex = (Math.abs(handlerOffset) - size) / size;\n    round = parseInt(String(omitZero(previousLength, positionIndex / previousLength))) + 1;\n  }\n\n  const prevOffset = omitZero(previousLength, positionIndex % previousLength);\n  const prevIndex = isPositive ? prevOffset : previousLength - prevOffset - 1;\n  const changedLength = round * (currentLength - previousLength);\n  const changedOffset = changedLength * size;\n  if (prevIndex > currentLength - 1 && currentLength < previousLength) {\n    if (isPositive)\n      handlerOffset = (currentLength - 1) * size * direction;\n\n    else\n      handlerOffset = (currentLength - 1) * size * -1;\n  }\n  else {\n    handlerOffset += changedOffset * direction;\n  }\n\n  return handlerOffset;\n}\n\n"],"mappings":";;;;;;;AAAO,SAASA,QAAQA,CAACC,CAAS,EAAEC,CAAS,EAAE;EAC7C,SAAS;;EACT,IAAID,CAAC,KAAK,CAAC,EACT,OAAO,CAAC;EAEV,OAAOC,CAAC;AACV;AAEO,SAASC,0BAA0BA,CAACC,MAM1C,EAAE;EACD,SAAS;;EACT,MAAM;IAAEC,SAAS;IAAEC,aAAa,EAAEC,cAAc;IAAEC,IAAI;IAAEC,cAAc;IAAEC;EAAc,CAAC,GAAGN,MAAM;EAEhG,IAAIE,aAAa,GAAGC,cAAc;EAClC,IAAII,aAAa;EACjB,IAAIC,KAAK;EAET,MAAMC,UAAU,GAAGR,SAAS,GAAG,CAAC;EAEhC,IAAIQ,UAAU,EAAE;IACdF,aAAa,GAAIG,IAAI,CAACC,GAAG,CAACT,aAAa,CAAC,GAAIE,IAAI;IAChDI,KAAK,GAAGI,QAAQ,CAACC,MAAM,CAACjB,QAAQ,CAACS,cAAc,EAAEE,aAAa,GAAGF,cAAc,CAAC,CAAC,CAAC;EACpF,CAAC,MACI;IACHE,aAAa,GAAG,CAACG,IAAI,CAACC,GAAG,CAACT,aAAa,CAAC,GAAGE,IAAI,IAAIA,IAAI;IACvDI,KAAK,GAAGI,QAAQ,CAACC,MAAM,CAACjB,QAAQ,CAACS,cAAc,EAAEE,aAAa,GAAGF,cAAc,CAAC,CAAC,CAAC,GAAG,CAAC;EACxF;EAEA,MAAMS,UAAU,GAAGlB,QAAQ,CAACS,cAAc,EAAEE,aAAa,GAAGF,cAAc,CAAC;EAC3E,MAAMU,SAAS,GAAGN,UAAU,GAAGK,UAAU,GAAGT,cAAc,GAAGS,UAAU,GAAG,CAAC;EAC3E,MAAME,aAAa,GAAGR,KAAK,IAAIF,aAAa,GAAGD,cAAc,CAAC;EAC9D,MAAMY,aAAa,GAAGD,aAAa,GAAGZ,IAAI;EAC1C,IAAIW,SAAS,GAAGT,aAAa,GAAG,CAAC,IAAIA,aAAa,GAAGD,cAAc,EAAE;IACnE,IAAII,UAAU,EACZP,aAAa,GAAG,CAACI,aAAa,GAAG,CAAC,IAAIF,IAAI,GAAGH,SAAS,CAAC,KAGvDC,aAAa,GAAG,CAACI,aAAa,GAAG,CAAC,IAAIF,IAAI,GAAG,CAAC,CAAC;EACnD,CAAC,MACI;IACHF,aAAa,IAAIe,aAAa,GAAGhB,SAAS;EAC5C;EAEA,OAAOC,aAAa;AACtB","ignoreList":[]}