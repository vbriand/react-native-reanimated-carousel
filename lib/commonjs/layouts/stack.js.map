{"version":3,"sources":["stack.ts"],"names":["screen","Dimensions","get","horizontalStackLayout","modeConfig","_value","showLength","snapDirection","moveSize","width","stackInterval","scaleInterval","opacityInterval","rotateZDeg","transform","validLength","value","inputRange","getCommonVariables","zIndex","opacity","getCommonStyles","styles","translateX","scale","rotateZ","Extrapolate","CLAMP","push","useHorizontalStackLayout","customAnimationConfig","customConfig","config","type","viewCount","layout","verticalStackLayout","translateY","opts","easeInOutCubic","v","page","Math","floor","abs","diff","Error","Number","MIN_VALUE"],"mappings":"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","sourcesContent":["import { useMemo } from \"react\";\nimport type { TransformsStyle, ViewStyle } from \"react-native\";\nimport { Dimensions } from \"react-native\";\nimport { Extrapolate, interpolate } from \"react-native-reanimated\";\n\nimport type { IComputedDirectionTypes, CustomConfig } from \"../types\";\n\nconst screen = Dimensions.get(\"window\");\n\nexport interface ILayoutConfig {\n  showLength?: number\n  moveSize?: number\n  stackInterval?: number\n  scaleInterval?: number\n  opacityInterval?: number\n  rotateZDeg?: number\n  snapDirection?: \"left\" | \"right\"\n}\n\nexport type TStackModeProps = IComputedDirectionTypes<{\n  /**\n     * Carousel Animated transitions.\n     */\n  mode?: \"horizontal-stack\" | \"vertical-stack\"\n  /**\n     * Stack animation style.\n     * @default\n     *     mode: 'vertical',\n     *     snapDirection: 'right',\n     *     moveSize: window.width,\n     *     stackInterval: 30,\n     *     scaleInterval: 0.08,\n     *     rotateZDeg: 135,\n     */\n  modeConfig?: ILayoutConfig\n}>;\n\nexport function horizontalStackLayout(modeConfig: ILayoutConfig = {}) {\n  return (_value: number) => {\n    \"worklet\";\n\n    const {\n      showLength,\n      snapDirection = \"left\",\n      moveSize = screen.width,\n      stackInterval = 18,\n      scaleInterval = 0.04,\n      opacityInterval = 0.1,\n      rotateZDeg = 30,\n    } = modeConfig;\n\n    const transform: TransformsStyle[\"transform\"] = [];\n    const { validLength, value, inputRange } = getCommonVariables({\n      showLength: showLength!,\n      value: _value,\n      snapDirection,\n    });\n    const { zIndex, opacity } = getCommonStyles({\n      validLength,\n      value,\n      opacityInterval,\n      snapDirection,\n    });\n\n    const styles: ViewStyle = {\n      transform,\n      zIndex,\n      opacity,\n    };\n\n    let translateX: number;\n    let scale: number;\n    let rotateZ: string;\n\n    if (snapDirection === \"left\") {\n      translateX = interpolate(\n        value,\n        inputRange,\n        [-moveSize, 0, validLength * stackInterval],\n        Extrapolate.CLAMP,\n      );\n      scale = interpolate(\n        value,\n        inputRange,\n        [1, 1, 1 - validLength * scaleInterval],\n        Extrapolate.CLAMP,\n      );\n      rotateZ = `${interpolate(\n        value,\n        inputRange,\n        [-rotateZDeg, 0, 0],\n        Extrapolate.CLAMP,\n      )}deg`;\n    }\n    else if (snapDirection === \"right\") {\n      translateX = interpolate(\n        value,\n        inputRange,\n        [-validLength * stackInterval, 0, moveSize],\n        Extrapolate.CLAMP,\n      );\n      scale = interpolate(\n        value,\n        inputRange,\n        [1 - validLength * scaleInterval, 1, 1],\n        Extrapolate.CLAMP,\n      );\n      rotateZ = `${interpolate(\n        value,\n        inputRange,\n        [0, 0, rotateZDeg],\n        Extrapolate.CLAMP,\n      )}deg`;\n    }\n\n    transform.push(\n      {\n        translateX: translateX!,\n      },\n      {\n        scale: scale!,\n      },\n      {\n        rotateZ: rotateZ!,\n      },\n    );\n\n    return styles;\n  };\n}\n\nexport function useHorizontalStackLayout(\n  customAnimationConfig: ILayoutConfig = {},\n  customConfig: CustomConfig = {},\n) {\n  const config = useMemo(\n    () => ({\n      type:\n                customAnimationConfig.snapDirection === \"right\"\n                  ? \"negative\"\n                  : \"positive\",\n      viewCount: customAnimationConfig.showLength,\n      ...customConfig,\n    }),\n    [customAnimationConfig, customConfig],\n  );\n\n  return {\n    layout: horizontalStackLayout(customAnimationConfig),\n    config,\n  };\n}\n\nexport function verticalStackLayout(modeConfig: ILayoutConfig = {}) {\n  return (_value: number) => {\n    \"worklet\";\n\n    const {\n      showLength,\n      snapDirection = \"left\",\n      moveSize = screen.width,\n      stackInterval = 18,\n      scaleInterval = 0.04,\n      opacityInterval = 0.1,\n      rotateZDeg = 30,\n    } = modeConfig;\n    const transform: TransformsStyle[\"transform\"] = [];\n    const { validLength, value, inputRange } = getCommonVariables({\n      showLength: showLength!,\n      value: _value,\n      snapDirection,\n    });\n    const { zIndex, opacity } = getCommonStyles({\n      validLength,\n      value,\n      opacityInterval,\n      snapDirection,\n    });\n\n    const styles: ViewStyle = {\n      transform,\n      zIndex,\n      opacity,\n    };\n\n    let translateX: number;\n    let scale: number;\n    let rotateZ: string;\n    let translateY: number;\n\n    if (snapDirection === \"left\") {\n      translateX = interpolate(\n        value,\n        inputRange,\n        [-moveSize, 0, 0],\n        Extrapolate.CLAMP,\n      );\n      scale = interpolate(\n        value,\n        inputRange,\n        [1, 1, 1 - validLength * scaleInterval],\n        Extrapolate.CLAMP,\n      );\n      rotateZ = `${interpolate(\n        value,\n        inputRange,\n        [-rotateZDeg, 0, 0],\n        Extrapolate.CLAMP,\n      )}deg`;\n      translateY = interpolate(\n        value,\n        inputRange,\n        [0, 0, validLength * stackInterval],\n        Extrapolate.CLAMP,\n      );\n    }\n    else if (snapDirection === \"right\") {\n      translateX = interpolate(\n        value,\n        inputRange,\n        [0, 0, moveSize],\n        Extrapolate.CLAMP,\n      );\n      scale = interpolate(\n        value,\n        inputRange,\n        [1 - validLength * scaleInterval, 1, 1],\n        Extrapolate.CLAMP,\n      );\n      rotateZ = `${interpolate(\n        value,\n        inputRange,\n        [0, 0, rotateZDeg],\n        Extrapolate.CLAMP,\n      )}deg`;\n      translateY = interpolate(\n        value,\n        inputRange,\n        [validLength * stackInterval, 0, 0],\n        Extrapolate.CLAMP,\n      );\n    }\n\n    transform.push(\n      {\n        translateX: translateX!,\n      },\n      {\n        scale: scale!,\n      },\n      {\n        rotateZ: rotateZ!,\n      },\n      {\n        translateY: translateY!,\n      },\n    );\n\n    return styles;\n  };\n}\n\nfunction getCommonVariables(opts: {\n  value: number\n  showLength: number\n  snapDirection: \"left\" | \"right\"\n}) {\n  \"worklet\";\n\n  const { showLength, value: _value, snapDirection } = opts;\n  function easeInOutCubic(v: number): number {\n    return v < 0.5 ? 4 * v * v * v : 1 - (-2 * v + 2) ** 3 / 2;\n  }\n  const page = Math.floor(Math.abs(_value));\n  const diff = Math.abs(_value) % 1;\n  const value\n        = _value < 0\n          ? -(page + easeInOutCubic(diff))\n          : page + easeInOutCubic(diff);\n  const validLength = showLength! - 1;\n\n  let inputRange: [number, number, number];\n\n  if (snapDirection === \"left\")\n    inputRange = [-1, 0, validLength];\n  else if (snapDirection === \"right\")\n    inputRange = [-validLength, 0, 1];\n  else\n    throw new Error(\"snapDirection must be set to either left or right\");\n\n  return {\n    inputRange,\n    validLength,\n    value,\n  };\n}\n\nfunction getCommonStyles(opts: {\n  value: number\n  validLength: number\n  opacityInterval: number\n  snapDirection: \"left\" | \"right\"\n}) {\n  \"worklet\";\n\n  const { snapDirection, validLength, value, opacityInterval } = opts;\n\n  let zIndex: number;\n  let opacity: number;\n\n  if (snapDirection === \"left\") {\n    zIndex\n            = Math.floor(\n        interpolate(\n          value,\n          [-1.5, -1, -1 + Number.MIN_VALUE, 0, validLength],\n          [\n            Number.MIN_VALUE,\n            validLength,\n            validLength,\n            validLength - 1,\n            -1,\n          ],\n        ) * 10000,\n      ) / 100;\n\n    opacity = interpolate(\n      value,\n      [-1, 0, validLength - 1, validLength],\n      [0.25, 1, 1 - (validLength - 1) * opacityInterval, 0.25],\n    );\n  }\n  else if (snapDirection === \"right\") {\n    zIndex\n            = Math.floor(\n        interpolate(\n          value,\n          [-validLength, 0, 1 - Number.MIN_VALUE, 1, 1.5],\n          [\n            1,\n            validLength - 1,\n            validLength,\n            validLength,\n            Number.MIN_VALUE,\n          ],\n        ) * 10000,\n      ) / 100;\n    opacity = interpolate(\n      value,\n      [-validLength, 1 - validLength, 0, 1],\n      [0.25, 1 - (validLength - 1) * opacityInterval, 1, 0.25],\n    );\n  }\n  else {\n    throw new Error(\"snapDirection must be set to either left or right\");\n  }\n\n  return {\n    zIndex,\n    opacity,\n  };\n}\n"]}