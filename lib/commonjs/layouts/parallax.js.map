{"version":3,"names":["_reactNativeReanimated","require","parallaxLayout","baseConfig","modeConfig","size","vertical","parallaxScrollingOffset","parallaxScrollingScale","parallaxAdjacentItemScale","value","translate","interpolate","zIndex","Extrapolate","CLAMP","scale","transform","translateY","translateX"],"sources":["parallax.ts"],"sourcesContent":["import { Extrapolate, interpolate } from \"react-native-reanimated\";\n\nimport type { IComputedDirectionTypes } from \"../types\";\n\ninterface TBaseConfig {\n  size: number\n  vertical: boolean\n}\n\nexport interface ILayoutConfig {\n  /**\n     * control prev/next item offset.\n     * @default 100\n     */\n  parallaxScrollingOffset?: number\n  /**\n     * control prev/current/next item offset.\n     * @default 0.8\n     */\n  parallaxScrollingScale?: number\n  /**\n     * control prev/next item offset.\n     * @default Math.pow(parallaxScrollingScale, 2)\n     */\n  parallaxAdjacentItemScale?: number\n}\n\nexport type TParallaxModeProps = IComputedDirectionTypes<{\n  /**\n     * Carousel Animated transitions.\n     */\n  mode?: \"parallax\"\n  modeConfig?: ILayoutConfig\n}>;\n\nexport function parallaxLayout(\n  baseConfig: TBaseConfig,\n  modeConfig: ILayoutConfig = {},\n) {\n  const { size, vertical } = baseConfig;\n  const {\n    parallaxScrollingOffset = 100,\n    parallaxScrollingScale = 0.8,\n    parallaxAdjacentItemScale = parallaxScrollingScale ** 2,\n  } = modeConfig;\n\n  return (value: number) => {\n    \"worklet\";\n    const translate = interpolate(\n      value,\n      [-1, 0, 1],\n      [-size + parallaxScrollingOffset, 0, size - parallaxScrollingOffset],\n    );\n\n    const zIndex = interpolate(\n      value,\n      [-1, 0, 1],\n      [0, size, 0],\n      Extrapolate.CLAMP,\n    );\n\n    const scale = interpolate(\n      value,\n      [-1, 0, 1],\n      [\n        parallaxAdjacentItemScale,\n        parallaxScrollingScale,\n        parallaxAdjacentItemScale,\n      ],\n      Extrapolate.CLAMP,\n    );\n\n    return {\n      transform: [\n        vertical\n          ? {\n            translateY: translate,\n          }\n          : {\n            translateX: translate,\n          },\n        {\n          scale,\n        },\n      ],\n      zIndex,\n    };\n  };\n}\n"],"mappings":";;;;;;AAAA,IAAAA,sBAAA,GAAAC,OAAA;AAmCO,SAASC,cAAcA,CAC5BC,UAAuB,EACvBC,UAAyB,GAAG,CAAC,CAAC,EAC9B;EACA,MAAM;IAAEC,IAAI;IAAEC;EAAS,CAAC,GAAGH,UAAU;EACrC,MAAM;IACJI,uBAAuB,GAAG,GAAG;IAC7BC,sBAAsB,GAAG,GAAG;IAC5BC,yBAAyB,GAAGD,sBAAsB,IAAI;EACxD,CAAC,GAAGJ,UAAU;EAEd,OAAQM,KAAa,IAAK;IACxB,SAAS;;IACT,MAAMC,SAAS,GAAG,IAAAC,kCAAW,EAC3BF,KAAK,EACL,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACV,CAAC,CAACL,IAAI,GAAGE,uBAAuB,EAAE,CAAC,EAAEF,IAAI,GAAGE,uBAAuB,CACrE,CAAC;IAED,MAAMM,MAAM,GAAG,IAAAD,kCAAW,EACxBF,KAAK,EACL,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACV,CAAC,CAAC,EAAEL,IAAI,EAAE,CAAC,CAAC,EACZS,kCAAW,CAACC,KACd,CAAC;IAED,MAAMC,KAAK,GAAG,IAAAJ,kCAAW,EACvBF,KAAK,EACL,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACV,CACED,yBAAyB,EACzBD,sBAAsB,EACtBC,yBAAyB,CAC1B,EACDK,kCAAW,CAACC,KACd,CAAC;IAED,OAAO;MACLE,SAAS,EAAE,CACTX,QAAQ,GACJ;QACAY,UAAU,EAAEP;MACd,CAAC,GACC;QACAQ,UAAU,EAAER;MACd,CAAC,EACH;QACEK;MACF,CAAC,CACF;MACDH;IACF,CAAC;EACH,CAAC;AACH","ignoreList":[]}